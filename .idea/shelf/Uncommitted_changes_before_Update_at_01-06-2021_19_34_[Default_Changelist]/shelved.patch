Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\napply plugin: 'com.google.firebase.crashlytics'\r\napply plugin: 'kotlin-android-extensions'\r\napply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"29.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"shopping.grocery.medicine.online.deals.coupons.compare.buy\"\r\n        minSdkVersion 19\r\n        targetSdkVersion 30\r\n        versionCode 7\r\n        versionName \"1.0.6\"\r\n        multiDexEnabled true\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n\r\n    implementation androidXdependencies.appCompat\r\n    implementation androidXdependencies.design\r\n    implementation androidXdependencies.recyclerView\r\n    implementation androidXdependencies.cardView\r\n    implementation retrofitDependencies.retrofit\r\n    implementation retrofitDependencies.gson\r\n    implementation retrofitDependencies.rxAdapterJava\r\n    implementation rxDependencies.rxAndroid\r\n    implementation rxDependencies.rxJava\r\n\r\n    implementation circleImageView\r\n    implementation glide\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    annotationProcessor glideCompiler\r\n\r\n    implementation 'com.google.firebase:firebase-analytics:19.0.0'\r\n    implementation 'com.google.firebase:firebase-crashlytics:18.0.0'\r\n    implementation 'com.google.firebase:firebase-config:21.0.0'\r\n    implementation 'com.facebook.android:audience-network-sdk:6.5.0'\r\n    implementation 'com.google.firebase:firebase-database:20.0.0'\r\n    implementation 'com.firebaseui:firebase-ui-database:3.2.2'\r\n\r\n    implementation 'com.synnapps:carouselview:0.1.5'\r\n\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n\r\n    implementation \"androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version\"\r\n    implementation \"androidx.lifecycle:lifecycle-livedata:$lifecycle_version\"\r\n\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\r\n    implementation 'androidx.core:core-ktx:1.3.2'\r\n    implementation 'com.onesignal:OneSignal:4.4.0'\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    testImplementation 'junit:junit:4.13.1'\r\n\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    implementation group: 'quant.searchview.library', name: 'searchview', version: '1.1.3'\r\n\r\n    implementation 'com.github.st235:expandablebottombar:1.4.0'\r\n\r\n\r\n    implementation 'com.github.faruktoptas:FancyShowCaseView:1.3.5'\r\n\r\n\r\n}\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 512dc21a6c796307eea016301d880552b564b477)
+++ app/build.gradle	(date 1622533666491)
@@ -82,6 +82,10 @@
     implementation 'com.github.faruktoptas:FancyShowCaseView:1.3.5'
 
 
+    implementation 'com.baoyz.swipemenulistview:library:1.3.0'
+
+
+
 }
 apply plugin: 'com.google.gms.google-services'
 apply plugin: 'com.google.firebase.crashlytics'
\ No newline at end of file
Index: app/src/main/res/layout/fragment_bookmark.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".view.fragment.BookmarkFragment\">\r\n\r\n    <!-- TODO: Update blank fragment layout -->\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:text=\"@string/hello_blank_fragment\" />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_bookmark.xml	(revision 512dc21a6c796307eea016301d880552b564b477)
+++ app/src/main/res/layout/fragment_bookmark.xml	(date 1622556272304)
@@ -1,14 +1,29 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     tools:context=".view.fragment.BookmarkFragment">
 
-    <!-- TODO: Update blank fragment layout -->
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="@string/hello_blank_fragment" />
+     <TextView
+         android:id="@+id/text"
+         android:layout_width="wrap_content"
+         android:layout_height="wrap_content"
+          android:text="My Wishlist"
+          app:layout_constraintTop_toTopOf="parent"
+          app:layout_constraintStart_toStartOf="parent"
+         android:layout_marginTop="20dp"
+         android:fontFamily="@font/montserrat_semibold"
+         android:textSize="24sp"
+         app:layout_constraintEnd_toEndOf="parent"
+          android:gravity="center_horizontal"/>
+
+     <androidx.recyclerview.widget.RecyclerView
+         android:layout_width="match_parent"
+         android:layout_height="wrap_content"
+         android:layout_margin="10dp"
+         app:layout_constraintStart_toStartOf="parent"
+         app:layout_constraintTop_toBottomOf="@+id/text"/>
 
-</FrameLayout>
\ No newline at end of file
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/fragment/BookmarkFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package shopping.grocery.medicine.online.deals.coupons.compare.buy.view.fragment\r\n\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.R\r\n\r\n// TODO: Rename parameter arguments, choose names that match\r\n// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\nprivate const val ARG_PARAM1 = \"param1\"\r\nprivate const val ARG_PARAM2 = \"param2\"\r\n\r\n/**\r\n * A simple [Fragment] subclass.\r\n * Use the [BookmarkFragment.newInstance] factory method to\r\n * create an instance of this fragment.\r\n */\r\nclass BookmarkFragment : Fragment() {\r\n    // TODO: Rename and change types of parameters\r\n    private var param1: String? = null\r\n    private var param2: String? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        arguments?.let {\r\n            param1 = it.getString(ARG_PARAM1)\r\n            param2 = it.getString(ARG_PARAM2)\r\n        }\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_bookmark, container, false)\r\n    }\r\n\r\n    companion object {\r\n        /**\r\n         * Use this factory method to create a new instance of\r\n         * this fragment using the provided parameters.\r\n         *\r\n         * @param param1 Parameter 1.\r\n         * @param param2 Parameter 2.\r\n         * @return A new instance of fragment BookmarkFragment.\r\n         */\r\n        // TODO: Rename and change types and number of parameters\r\n        @JvmStatic\r\n        fun newInstance(param1: String, param2: String) =\r\n            BookmarkFragment().apply {\r\n                arguments = Bundle().apply {\r\n                    putString(ARG_PARAM1, param1)\r\n                    putString(ARG_PARAM2, param2)\r\n                }\r\n            }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/fragment/BookmarkFragment.kt	(revision 512dc21a6c796307eea016301d880552b564b477)
+++ app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/fragment/BookmarkFragment.kt	(date 1622556272435)
@@ -7,6 +7,7 @@
 import android.view.ViewGroup
 import shopping.grocery.medicine.online.deals.coupons.compare.buy.R
 
+
 // TODO: Rename parameter arguments, choose names that match
 // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
 private const val ARG_PARAM1 = "param1"
@@ -38,6 +39,17 @@
         return inflater.inflate(R.layout.fragment_bookmark, container, false)
     }
 
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+
+
+    }
+
+
+
+
+
     companion object {
         /**
          * Use this factory method to create a new instance of
Index: app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/WebActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package shopping.grocery.medicine.online.deals.coupons.compare.buy.view\r\n\r\nimport android.Manifest\r\nimport android.app.AlertDialog\r\nimport android.content.DialogInterface\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.view.animation.AnimationUtils\r\nimport android.webkit.*\r\nimport android.widget.*\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport com.bumptech.glide.Glide\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy\r\nimport com.facebook.ads.*\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton\r\nimport com.google.firebase.remoteconfig.FirebaseRemoteConfig\r\nimport kotlinx.android.synthetic.main.activity_web.*\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.R\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Constants\r\n\r\n\r\nclass WebActivity : AppCompatActivity() {\r\n\r\n    var webView: WebView? = null\r\n    var appTitle: String? = null\r\n    var appUrl: String? = null\r\n    var appIcon: String? = null\r\n\r\n    var rlWebSplash: RelativeLayout? = null\r\n    var ivAppIcon: ImageView? = null\r\n\r\n    private val TAG: String = WebActivity::class.java.simpleName\r\n    private val TIME_DELAY = 2000\r\n    private var back_pressed: Long = 0\r\n\r\n    private var interstitialFbAd: com.facebook.ads.InterstitialAd? = null\r\n    private var adView: AdView? = null\r\n    lateinit var fullscreenView: View\r\n\r\n    var firebaseRemoteConfig: FirebaseRemoteConfig? = null\r\n\r\n    var mGeoLocationRequestOrigin: String? = null\r\n    var mGeoLocationCallback: GeolocationPermissions.Callback? = null\r\n\r\n    lateinit var btn1: FloatingActionButton\r\n    lateinit var share: FloatingActionButton\r\n    private lateinit var bkmark: FloatingActionButton\r\n    private lateinit var bkmarkText: TextView\r\n    private lateinit var shareText: TextView\r\n    private var clicked = false\r\n\r\n    private val LOCATION_PERMISSION_CODE = 1\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_web)\r\n\r\n        initViews()\r\n        initData()\r\n\r\n        firebaseRemoteConfig = FirebaseRemoteConfig.getInstance()\r\n\r\n        if (firebaseRemoteConfig!!.getBoolean(Constants().SHOW_ADS)) {\r\n\r\n            onFbBannerAds()\r\n            onLoadFbInterstitial()\r\n        }\r\n        loadWebSplash()\r\n\r\n        ActivityCompat.requestPermissions(\r\n            this,\r\n            arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), LOCATION_PERMISSION_CODE\r\n        )\r\n\r\n        webViewSettings()\r\n\r\n        webView?.loadUrl(appUrl!!)\r\n\r\n        btn1.setOnClickListener {\r\n            onButtonClicked()\r\n        }\r\n\r\n        share.setOnClickListener {\r\n            val sendIntent: Intent = Intent().setAction(Intent.ACTION_SEND)\r\n            sendIntent.putExtra(\r\n                Intent.EXTRA_TEXT, appUrl)\r\n            sendIntent.type = \"text/simple\"\r\n            val shareIntent = Intent.createChooser(sendIntent, null)\r\n            startActivity(shareIntent)\r\n        }\r\n    }\r\n\r\n    fun initViews() {\r\n        webView = findViewById(R.id.webViewMain)\r\n        rlWebSplash = findViewById(R.id.rlWebSplash)\r\n        ivAppIcon = findViewById(R.id.ivAppIcon)\r\n        share = findViewById(R.id.button2)\r\n        bkmark = findViewById(R.id.button3)\r\n        btn1 = findViewById(R.id.button1)\r\n        shareText = findViewById(R.id.share)\r\n        bkmarkText = findViewById(R.id.bkmark)\r\n    }\r\n\r\n    fun initData() {\r\n        val bundle: Bundle? = intent.extras\r\n        appUrl = bundle?.getString(\"url\")\r\n        appIcon = bundle?.getString(\"app_icon\")\r\n        Log.d(\"TAG\", \"initData: \" + bundle?.getString(\"url\"))\r\n\r\n    }\r\n\r\n    fun webViewSettings() {\r\n        webView!!.settings.loadsImagesAutomatically = true\r\n        webView!!.settings.javaScriptEnabled = true\r\n        webView!!.settings.allowContentAccess = true\r\n\r\n        webView!!.settings.useWideViewPort = true\r\n        webView!!.settings.loadWithOverviewMode = true\r\n        webView!!.settings.domStorageEnabled = true\r\n        webView!!.clearView()\r\n        webView!!.isHorizontalScrollBarEnabled = false\r\n        webView!!.settings.setAppCacheEnabled(true)\r\n        webView!!.settings.databaseEnabled = true\r\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {\r\n            webView!!.settings.databasePath = \"/data/data/\" + this.packageName + \"/databases/\"\r\n        }\r\n        webView!!.isVerticalScrollBarEnabled = false\r\n        webView!!.settings.builtInZoomControls = true\r\n        webView!!.settings.displayZoomControls = false\r\n        webView!!.settings.allowFileAccess = true\r\n        webView!!.settings.pluginState = WebSettings.PluginState.OFF\r\n        webView!!.isScrollbarFadingEnabled = false\r\n        webView!!.settings.cacheMode = WebSettings.LOAD_NO_CACHE\r\n        webView!!.settings.defaultZoom = WebSettings.ZoomDensity.FAR\r\n        webView!!.webViewClient = WebViewClient()\r\n        webView!!.settings.setRenderPriority(WebSettings.RenderPriority.HIGH)\r\n        webView!!.setInitialScale(1)\r\n\r\n        webView!!.webViewClient = object : WebViewClient() {\r\n            override fun shouldOverrideUrlLoading(\r\n                view: WebView,\r\n                request: WebResourceRequest\r\n            ): Boolean {\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                    view.loadUrl(request.url.toString())\r\n                }\r\n                return false\r\n            }\r\n        }\r\n\r\n        webView!!.webChromeClient = object : WebChromeClient() {\r\n\r\n            override fun onGeolocationPermissionsShowPrompt(\r\n                origin: String?,\r\n                callback: GeolocationPermissions.Callback?\r\n            ) {\r\n                if (ContextCompat.checkSelfPermission(\r\n                        this@WebActivity,\r\n                        Manifest.permission.ACCESS_FINE_LOCATION\r\n                    )\r\n                    != PackageManager.PERMISSION_GRANTED\r\n                ) {\r\n\r\n                    if (ActivityCompat.shouldShowRequestPermissionRationale(\r\n                            this@WebActivity,\r\n                            Manifest.permission.ACCESS_FINE_LOCATION\r\n                        )\r\n                    ) {\r\n                        AlertDialog.Builder(this@WebActivity)\r\n                            .setMessage(\"Please turn ON the GPS to make app work smoothly\")\r\n                            .setNeutralButton(\r\n                                android.R.string.ok,\r\n                                DialogInterface.OnClickListener { dialogInterface, i ->\r\n                                    mGeoLocationCallback = callback\r\n                                    mGeoLocationRequestOrigin = origin\r\n                                    ActivityCompat.requestPermissions(\r\n                                        this@WebActivity,\r\n                                        arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),\r\n                                        1001\r\n                                    )\r\n\r\n                                })\r\n                            .show()\r\n\r\n                    } else {\r\n                        //no explanation need we can request the locatio\r\n                        mGeoLocationCallback = callback\r\n                        mGeoLocationRequestOrigin = origin\r\n                        ActivityCompat.requestPermissions(\r\n                            this@WebActivity,\r\n                            arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), 1001\r\n                        )\r\n                    }\r\n                } else {\r\n                    //tell the webview that permission has granted\r\n                    callback!!.invoke(origin, true, true)\r\n                }\r\n            }\r\n\r\n\r\n            override fun onProgressChanged(view: WebView?, newProgress: Int) {\r\n                super.onProgressChanged(view, newProgress)\r\n                if (newProgress >= 80) {\r\n                    rlWebSplash!!.visibility = View.GONE\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    override fun onRequestPermissionsResult(\r\n        requestCode: Int,\r\n        permissions: Array<out String>,\r\n        grantResults: IntArray\r\n    ) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\r\n\r\n        when (requestCode) {\r\n            1001 -> {\r\n                //if permission is cancel result array would be empty\r\n                if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    //permission was granted\r\n                    if (mGeoLocationCallback != null) {\r\n                        mGeoLocationCallback!!.invoke(mGeoLocationRequestOrigin, true, true)\r\n                    }\r\n                } else {\r\n                    //permission denied\r\n                    if (mGeoLocationCallback != null) {\r\n                        mGeoLocationCallback!!.invoke(mGeoLocationRequestOrigin, false, false)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    fun loadWebSplash() {\r\n        Glide.with(ivAppIcon!!.context)\r\n            .load(appIcon)\r\n            .diskCacheStrategy(DiskCacheStrategy.ALL)\r\n            .into(ivAppIcon!!)\r\n    }\r\n\r\n    fun onLoadFbInterstitial() {\r\n        interstitialFbAd = InterstitialAd(this, Constants().getFbInterstitialWebExit())\r\n\r\n        val interstitialAdListener: InterstitialAdListener = object : InterstitialAdListener {\r\n            override fun onInterstitialDisplayed(ad: Ad) {\r\n                // Interstitial ad displayed callback\r\n                Log.e(TAG, \"Interstitial ad displayed.\")\r\n            }\r\n\r\n            override fun onInterstitialDismissed(ad: Ad) {\r\n                // Interstitial dismissed callback\r\n                Log.e(TAG, \"Interstitial ad dismissed.\")\r\n                finish()\r\n            }\r\n\r\n            override fun onError(ad: Ad?, adError: AdError) {\r\n                // Ad error callback\r\n                Log.e(TAG, \"Interstitial ad failed to load: \" + adError.getErrorMessage())\r\n            }\r\n\r\n            override fun onAdLoaded(ad: Ad) {\r\n                // Interstitial ad is loaded and ready to be displayed\r\n                Log.d(TAG, \"Interstitial ad is loaded and ready to be displayed!\")\r\n                // Show the ad\r\n//                interstitialFbAd.show()\r\n            }\r\n\r\n            override fun onAdClicked(ad: Ad) {\r\n                // Ad clicked callback\r\n                Log.d(TAG, \"Interstitial ad clicked!\")\r\n            }\r\n\r\n            override fun onLoggingImpression(ad: Ad) {\r\n                // Ad impression logged callback\r\n                Log.d(TAG, \"Interstitial ad impression logged!\")\r\n            }\r\n        }\r\n\r\n        interstitialFbAd!!.loadAd(\r\n            interstitialFbAd!!.buildLoadAdConfig()\r\n                .withAdListener(interstitialAdListener)\r\n                .build()\r\n        );\r\n\r\n    }\r\n\r\n    fun onFbBannerAds() {\r\n        adView = AdView(this, Constants().getFbBannerWeb(), AdSize.BANNER_HEIGHT_50)\r\n\r\n        // Find the Ad Container\r\n        val adContainer = findViewById<View>(R.id.banner_container) as LinearLayout\r\n\r\n        // Add the ad view to your activity layout\r\n        adContainer.addView(adView)\r\n\r\n        val adListenerBanner: com.facebook.ads.AdListener = object : com.facebook.ads.AdListener {\r\n            override fun onError(ad: Ad?, adError: AdError) {\r\n                // Ad error callback\r\n            }\r\n\r\n            override fun onAdLoaded(ad: Ad?) {\r\n                Log.d(TAG, \"onAdLoaded: Banner\")\r\n            }\r\n\r\n            override fun onAdClicked(ad: Ad?) {\r\n                // Ad clicked callback\r\n            }\r\n\r\n            override fun onLoggingImpression(ad: Ad?) {\r\n                // Ad impression logged callback\r\n            }\r\n        }\r\n\r\n        // Request an ad\r\n        adView!!.loadAd(adView!!.buildLoadAdConfig().withAdListener(adListenerBanner).build())\r\n    }\r\n\r\n    public override fun onPause() {\r\n//        adView.pause()\r\n        super.onPause()\r\n    }\r\n\r\n    // Called when returning to the activity\r\n    public override fun onResume() {\r\n        super.onResume()\r\n//        adView.resume()\r\n    }\r\n\r\n    // Called before the activity is destroyed\r\n    public override fun onDestroy() {\r\n        if (adView != null) {\r\n            adView!!.destroy()\r\n        }\r\n        super.onDestroy()\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n\r\n        if (back_pressed + TIME_DELAY > System.currentTimeMillis()) {\r\n            super.onBackPressed()\r\n        } else {\r\n            Toast.makeText(\r\n                getBaseContext(), \"Double click to exit!\",\r\n                Toast.LENGTH_SHORT\r\n            ).show();\r\n            if (webView!!.canGoBack()) {\r\n                webView!!.goBack()\r\n            } else {\r\n                if (interstitialFbAd != null && interstitialFbAd!!.isAdLoaded) {\r\n                    if (interstitialFbAd!!.isAdInvalidated) {\r\n                    } else {\r\n                        interstitialFbAd!!.show()\r\n                    }\r\n                } else {\r\n                    super.onBackPressed()\r\n                }\r\n\r\n            }\r\n        }\r\n        back_pressed = System.currentTimeMillis();\r\n\r\n    }\r\n\r\n    private fun onButtonClicked() {\r\n\r\n        if (!clicked) {\r\n            share.visibility = View.VISIBLE\r\n            bkmark.visibility = View.VISIBLE\r\n            shareText.visibility = View.VISIBLE\r\n            bkmarkText.visibility = View.VISIBLE\r\n        } else {\r\n            share.visibility = View.INVISIBLE\r\n            bkmark.visibility = View.INVISIBLE\r\n            shareText.visibility = View.INVISIBLE\r\n            bkmarkText.visibility = View.INVISIBLE\r\n        }\r\n\r\n        if (!clicked) {\r\n            share.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.from_bottom\r\n                )\r\n            )\r\n            bkmark.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.from_bottom\r\n                )\r\n            )\r\n            shareText.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.from_left\r\n                )\r\n            )\r\n            bkmarkText.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.from_left\r\n                )\r\n            )\r\n            btn1.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.rotate_open\r\n                )\r\n            )\r\n        } else {\r\n            share.startAnimation(AnimationUtils.loadAnimation(applicationContext, R.anim.to_bottom))\r\n            bkmark.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.to_bottom\r\n                )\r\n            )\r\n\r\n            shareText.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.to_left\r\n                )\r\n            )\r\n            bkmarkText.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.to_left\r\n                )\r\n            )\r\n            btn1.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.rotate_close\r\n                )\r\n            )\r\n        }\r\n\r\n        if (!clicked) {\r\n            share.isClickable = true\r\n            bkmark.isClickable = true\r\n            shareText.isClickable = true\r\n            bkmarkText.isClickable = true\r\n        } else {\r\n            share.isClickable = false\r\n            bkmark.isClickable = false\r\n            shareText.isClickable = false\r\n            bkmarkText.isClickable = false\r\n        }\r\n        clicked = !clicked\r\n    }\r\n//\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/WebActivity.kt	(revision 512dc21a6c796307eea016301d880552b564b477)
+++ app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/WebActivity.kt	(date 1622533480549)
@@ -2,8 +2,10 @@
 
 import android.Manifest
 import android.app.AlertDialog
+import android.content.Context
 import android.content.DialogInterface
 import android.content.Intent
+import android.content.SharedPreferences
 import android.content.pm.PackageManager
 import android.os.Build
 import android.os.Bundle
@@ -61,6 +63,7 @@
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_web)
 
+
         initViews()
         initData()
 
@@ -86,6 +89,8 @@
             onButtonClicked()
         }
 
+
+
         share.setOnClickListener {
             val sendIntent: Intent = Intent().setAction(Intent.ACTION_SEND)
             sendIntent.putExtra(
