Index: app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package shopping.grocery.medicine.online.deals.coupons.compare.buy.view\r\n\r\nimport android.app.Dialog\r\nimport android.content.ActivityNotFoundException\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.view.WindowManager\r\nimport android.widget.EditText\r\nimport android.widget.ImageView\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.fragment.app.FragmentPagerAdapter\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.android.material.tabs.TabLayout\r\nimport com.google.firebase.analytics.FirebaseAnalytics\r\nimport com.google.firebase.remoteconfig.BuildConfig\r\nimport com.google.firebase.remoteconfig.FirebaseRemoteConfig\r\nimport com.yalantis.contextmenu.lib.ContextMenuDialogFragment\r\nimport com.yalantis.contextmenu.lib.MenuObject\r\nimport com.yalantis.contextmenu.lib.MenuParams\r\nimport github.com.st235.lib_expandablebottombar.ExpandableBottomBar\r\nimport kotlinx.android.synthetic.main.activity_main.*\r\nimport kotlinx.android.synthetic.main.bookmark_layout.*\r\nimport me.toptas.fancyshowcase.FancyShowCaseView\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.R\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.base.BaseActivity\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Constants\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.CustomViewPager\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.ForceUpdateChecker\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Pref\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.view.adapter.home.AllAppsAdapter\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.view.listener.AllAppsItemClickListener\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.viewmodel.CategoryViewModel\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.viewmodel.DealsViewModel\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.viewmodel.GlobalViewModel\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.viewmodel.HomeViewModel\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.viewpager.AppPagerAdapter\r\n\r\n\r\nclass MainActivity : BaseActivity(), AllAppsItemClickListener<List<String>>,\r\n    ForceUpdateChecker.OnUpdateNeededListener {\r\n\r\n    var viewPager: CustomViewPager? = null\r\n    var viewPagerTab: TabLayout? = null\r\n    var fragmentPagerAdapter: FragmentPagerAdapter? = null\r\n    var homeViewModel: HomeViewModel? = null\r\n    var globalViewModel: GlobalViewModel? = null\r\n    var dealsViewModel: DealsViewModel? = null\r\n    var categoryViewModel: CategoryViewModel? = null\r\n    var firebaseAnalytics: FirebaseAnalytics? = null\r\n\r\n    private lateinit var contextMenuDialogFragment: ContextMenuDialogFragment\r\n\r\n    private lateinit var bottomNav: ExpandableBottomBar\r\n\r\n    var search_rvCountryStores: RecyclerView? = null\r\n\r\n    var appsList: ArrayList<List<String>>? = ArrayList()\r\n\r\n    val filterList: ArrayList<List<String>> = ArrayList()\r\n\r\n    var dialog: Dialog? = null\r\n\r\n    var allAppsAdapter: AllAppsAdapter? = null\r\n\r\n    lateinit var search: ImageView\r\n\r\n    private var searchTxt: String? = null\r\n\r\n    var firebaseRemoteConfig: FirebaseRemoteConfig? = null\r\n\r\n    override val bindingVariable: Int\r\n        get() = 0\r\n    override val layoutId: Int\r\n        get() = 0\r\n    var bool: Boolean = false\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_main)\r\n\r\n\r\n        initViews()\r\n\r\n//        initToolbar()\r\n        initMenuFragment()\r\n\r\n        Pref.initializeInstance(this)\r\n\r\n        firebaseRemoteConfig = FirebaseRemoteConfig.getInstance()\r\n\r\n        Log.d(\"TAG\", \"onCreate: currentTime \"+System.currentTimeMillis())\r\n\r\n        if(!Pref.instance!!.dataChangedDate.equals(firebaseRemoteConfig!!.getString(Constants().DATA_CHANGED_DATE))){\r\n            Pref.instance!!.dataChanged = true\r\n            Pref.instance!!.dataChangedDate = firebaseRemoteConfig!!.getString(Constants().DATA_CHANGED_DATE)\r\n        }\r\n        else{\r\n            Pref.instance!!.dataChanged = false\r\n        }\r\n\r\n        dialog = Dialog(this)\r\n\r\n        ForceUpdateChecker().with(this)!!.onUpdateNeeded(this).check()\r\n\r\n        homeViewModel = ViewModelProvider(this).get(HomeViewModel::class.java)\r\n        dealsViewModel = ViewModelProvider(this).get(DealsViewModel::class.java)\r\n        categoryViewModel = ViewModelProvider(this).get(CategoryViewModel::class.java)\r\n        globalViewModel = ViewModelProvider(this).get(GlobalViewModel::class.java)\r\n\r\n\r\n        homeViewModel?.loadData()\r\n\r\n        homeViewModel!!.allAppsLiveData.observe(this, Observer { t ->\r\n            Log.d(\"TAG\", \"HomeFragment Live allAppsLiveData$t\")\r\n            appsList!!.clear()\r\n            if (t != null) {\r\n                t.getValues()?.let { appsList?.addAll(it) }\r\n            }\r\n        })\r\n\r\n        search.setOnClickListener {\r\n            onShowStores(appsList!!)\r\n        }\r\n//\r\n        viewPagerTab!!.addOnTabSelectedListener(object : TabLayout.OnTabSelectedListener {\r\n            override fun onTabSelected(tab: TabLayout.Tab) {\r\n                Log.d(\"TAG\", \"onTabSelected: \" + tab.position)\r\n                val bundleAppUsage = Bundle()\r\n                bundleAppUsage.putString(\"tab_click\", tab.text.toString())\r\n                onUpdateLogEvent(bundleAppUsage, \"app_usage\", false)\r\n            }\r\n\r\n            override fun onTabUnselected(tab: TabLayout.Tab) {}\r\n            override fun onTabReselected(tab: TabLayout.Tab) {}\r\n        })\r\n\r\n        setupViewPager()\r\n\r\n        val menu = bottomNav.menu\r\n\r\n        menu.select(R.id.id_home)\r\n//        viewPager!!.currentItem = 0\r\n\r\n\r\n        bottomNav.onItemSelectedListener = { view, menuItem, bool ->\r\n            when (menuItem.id) {\r\n                R.id.id_home -> {\r\n\r\n                    viewPager!!.currentItem = 0\r\n                    fancy(view, \"Home\")\r\n\r\n                }\r\n                R.id.id_category -> {\r\n\r\n                    viewPager!!.currentItem = 1\r\n                    fancy(view, \"Category\")\r\n                }\r\n                R.id.id_deals -> {\r\n\r\n                    viewPager!!.currentItem = 2\r\n                    fancy(view, \"Deals\")\r\n                }\r\n                R.id.id_bookmark -> {\r\n\r\n                    viewPager!!.currentItem = 3\r\n                    fancy(view, \"Deals\")\r\n                }\r\n            }\r\n        }\r\n\r\n        ivMenu.setOnClickListener {\r\n            showContextMenuDialogFragment()\r\n        }\r\n    }\r\n\r\n    private fun initViews() {\r\n        firebaseAnalytics = FirebaseAnalytics.getInstance(this)\r\n        bottomNav = findViewById(R.id.expandable_bottom_bar)\r\n        viewPager = findViewById(R.id.vpPager)\r\n        viewPagerTab = findViewById(R.id.view_pager_tab)\r\n        search = findViewById(R.id.search)\r\n    }\r\n\r\n//    private fun initToolbar() {\r\n//        setSupportActionBar(toolbar)\r\n//\r\n//        supportActionBar?.apply {\r\n//            setHomeButtonEnabled(false)\r\n//            setDisplayHomeAsUpEnabled(false)\r\n//            setDisplayShowTitleEnabled(false)\r\n//        }\r\n//    }\r\n\r\n    private fun fancy(it: View, title: String) {\r\n        return FancyShowCaseView.Builder(this).focusOn(it).title(title).delay(50).showOnce(title)\r\n            .build()\r\n            .show()\r\n    }\r\n\r\n    private fun onShowStores(list: ArrayList<List<String>>) {\r\n        dialog!!.setContentView(R.layout.dialog_search)\r\n\r\n        dialog!!.window!!.setLayout(\r\n            WindowManager.LayoutParams.MATCH_PARENT,\r\n            WindowManager.LayoutParams.MATCH_PARENT\r\n        );\r\n\r\n        search_rvCountryStores = dialog!!.findViewById(R.id.search_rvCategoryStores)\r\n\r\n        setRecyclerView()\r\n\r\n        allAppsAdapter!!.setItems(list)\r\n\r\n        dialog!!.show()\r\n\r\n    }\r\n\r\n    private fun setRecyclerView() {\r\n        allAppsAdapter = AllAppsAdapter(applicationContext)\r\n        allAppsAdapter!!.setListener(this)\r\n        search_rvCountryStores.apply {\r\n            search_rvCountryStores?.layoutManager = GridLayoutManager(this@MainActivity, 3)\r\n            search_rvCountryStores?.adapter = allAppsAdapter\r\n\r\n            val appSearchView: EditText = dialog!!.findViewById(R.id.app_search)\r\n            filterList.clear()\r\n            filterList.addAll(appsList!!)\r\n\r\n            appSearchView.addTextChangedListener(textwatcher)\r\n        }\r\n    }\r\n\r\n    private val textwatcher = object : TextWatcher {\r\n\r\n\r\n        override fun beforeTextChanged(\r\n            charSequence: CharSequence?,\r\n            start: Int,\r\n            count: Int,\r\n            after: Int\r\n        ) {\r\n        }\r\n\r\n        override fun onTextChanged(\r\n            charSequence: CharSequence?,\r\n            start: Int,\r\n            before: Int,\r\n            count: Int\r\n        ) {\r\n\r\n            Log.d(\"Filter\", filterList.toString())\r\n\r\n            val searchChar = charSequence.toString().toLowerCase()\r\n            Log.d(\"filterSea\", searchChar)\r\n            searchTxt = searchChar\r\n\r\n//            val itemsModal = ArrayList<List<String>>()\r\n//\r\n//            for (item in filterList) {\r\n//                if (item[1].toLowerCase().contains(searchChar)) {\r\n//                    Log.d(\"filterdone\", item[1])\r\n//                    Log.d(\"filterChar\", searchChar)\r\n//                    itemsModal.add(item)\r\n//                }\r\n//            }\r\n//\r\n//            appsList!!.clear()\r\n//            appsList!!.addAll(itemsModal)\r\n//            Log.d(\"filterList\", itemsModal.toString())\r\n//            allAppsAdapter!!.setItems(appsList)\r\n//            allAppsAdapter!!.notifyDataSetChanged()\r\n        }\r\n\r\n        override fun afterTextChanged(s: Editable?) {\r\n        }\r\n    }\r\n\r\n    private fun setupViewPager() {\r\n\r\n        fragmentPagerAdapter = AppPagerAdapter(supportFragmentManager)\r\n        viewPager!!.adapter = fragmentPagerAdapter\r\n        val limit =\r\n            if ((fragmentPagerAdapter as AppPagerAdapter).count > 1) (fragmentPagerAdapter as AppPagerAdapter).count - 1 else 1\r\n        viewPager!!.offscreenPageLimit = limit;\r\n        viewPager!!.currentItem = 0\r\n\r\n        viewPager!!.setSwipePagingEnabled(false)\r\n\r\n        viewPagerTab!!.setupWithViewPager(viewPager)\r\n\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        homeViewModel?.reset()\r\n        globalViewModel?.reset()\r\n        dealsViewModel?.reset()\r\n        categoryViewModel?.reset()\r\n        super.onDestroy()\r\n\r\n    }\r\n\r\n    override fun onUpdateNeeded(updateUrl: String?) {\r\n        val dialog = AlertDialog.Builder(this)\r\n            .setTitle(\"New version available\")\r\n            .setMessage(\"Please, update app to new version to continue shopping.\")\r\n            .setPositiveButton(\r\n                \"Update\"\r\n            ) { dialog, which -> redirectStore(updateUrl!!) }.setNegativeButton(\r\n                \"No, thanks\"\r\n            ) { dialog, which -> finish() }.create()\r\n        dialog.show()\r\n\r\n    }\r\n\r\n    private fun redirectStore(updateUrl: String) {\r\n        val intent = Intent(Intent.ACTION_VIEW, Uri.parse(updateUrl))\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)\r\n        startActivity(intent)\r\n    }\r\n\r\n    fun onUpdateLogEvent(bundle: Bundle, eventName: String, isUrlVisited: Boolean) {\r\n        Log.d(\"TAG\", \"onUpdateLogEvent: \")\r\n        if (BuildConfig.DEBUG) {\r\n            return\r\n        } else {\r\n            if (isUrlVisited) {\r\n                firebaseAnalytics!!.logEvent(eventName, bundle)\r\n                firebaseAnalytics!!.logEvent(\"url_visited\", bundle)\r\n            } else\r\n                firebaseAnalytics!!.logEvent(eventName, bundle)\r\n        }\r\n    }\r\n\r\n    override fun onAllCardClick(item: List<String>) {\r\n        Log.d(\"TAG\", \"onAllCardClick: \" + item[1])\r\n\r\n        if (item[1] == \"Amazon\") {\r\n\r\n            if (bool) {\r\n                val browserIntent = Intent(Intent.ACTION_VIEW, Uri.parse(item[2]))\r\n                startActivity(browserIntent)\r\n            } else {\r\n                val intent: Intent = Intent(this, WebActivity::class.java)\r\n                intent.putExtra(\"title\", item[1])\r\n                intent.putExtra(\"url\", item[2])\r\n                intent.putExtra(\"app_icon\", item[3])\r\n                intent.putExtra(\"color\", item[4])\r\n                if (searchTxt != null) {\r\n                    intent.putExtra(\"search_url\", item[5] + \"$searchTxt\")\r\n                }\r\n                startActivity(intent)\r\n            }\r\n        } else {\r\n            val intent: Intent = Intent(this, WebActivity::class.java)\r\n            intent.putExtra(\"title\", item[1])\r\n            intent.putExtra(\"url\", item[2])\r\n            intent.putExtra(\"app_icon\", item[3])\r\n            intent.putExtra(\"color\", item[4])\r\n            if (searchTxt != null) {\r\n                intent.putExtra(\"search_url\", item[5] + \"$searchTxt\")\r\n            }\r\n\r\n            startActivity(intent)\r\n        }\r\n\r\n        val bundle = Bundle()\r\n        bundle.putString(\"title\", item[1])\r\n        bundle.putString(\"url\", item[2])\r\n\r\n        this.onUpdateLogEvent(bundle, \"all_apps_visited\", true)\r\n    }\r\n\r\n//    override fun onCreateOptionsMenu(menu: Menu?): Boolean {\r\n//        menuInflater.inflate(R.menu.menu2, menu)\r\n//        Log.d(\"menuInflate\", \"done\")\r\n//        return true\r\n//    }\r\n//\r\n//    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n//        item.let {\r\n//            when (it.itemId) {\r\n//                R.id.context_menu -> {\r\n//                    Log.d(\"Menu Item\", it.itemId.toString())\r\n//                    showContextMenuDialogFragment()\r\n//                }\r\n//            }\r\n//        }\r\n//\r\n//        return super.onOptionsItemSelected(item)\r\n//    }\r\n\r\n    private fun initMenuFragment() {\r\n        val menuParams = MenuParams(\r\n            actionBarSize = resources.getDimension(R.dimen.menu).toInt(),\r\n            menuObjects = getMenuObjects(),\r\n            isClosableOutside = true\r\n        )\r\n\r\n        contextMenuDialogFragment = ContextMenuDialogFragment.newInstance(menuParams).apply {\r\n            menuItemClickListener = { view, position ->\r\n                when(position){\r\n                    1 -> {\r\n                        try {\r\n                            startActivity(Intent(Intent.ACTION_VIEW, Uri.parse(\"https://play.google.com/store/apps/dev?id=6823602592155636380\")))\r\n                        } catch (e: ActivityNotFoundException) {\r\n                            startActivity(Intent(Intent.ACTION_VIEW, Uri.parse(\"https://play.google.com/store/apps/details?id=6823602592155636380\")))\r\n                        }\r\n                    }\r\n                    2 -> {\r\n                        try {\r\n                            startActivity(Intent(Intent.ACTION_VIEW, Uri.parse(\"https://play.google.com/store/apps/details?id=shopping.grocery.medicine.online.deals.coupons.compare.buy\")))\r\n                        } catch (e: ActivityNotFoundException) {\r\n                            startActivity(Intent(Intent.ACTION_VIEW, Uri.parse(\"https://play.google.com/store/apps/details?id=shopping.grocery.medicine.online.deals.coupons.compare.buy\")))\r\n                        }\r\n                    }\r\n                    2 -> {\r\n                        val i = Intent(Intent.ACTION_SEND)\r\n                        i.type = \"message/rfc822\"\r\n                        i.putExtra(Intent.EXTRA_EMAIL, arrayOf(\"infinitywebapps@gmail.com\"))\r\n                        i.putExtra(Intent.EXTRA_SUBJECT, \"Feedback \"+resources.getString(R.string.app_name))\r\n                        i.putExtra(Intent.EXTRA_TEXT, \"Feedback :: \")\r\n                        try {\r\n                            startActivity(Intent.createChooser(i, \"Send feedback...\"))\r\n                        } catch (ex: ActivityNotFoundException) {\r\n                            Toast.makeText(\r\n                                this@MainActivity,\r\n                                \"There are no email clients installed.\",\r\n                                Toast.LENGTH_SHORT\r\n                            ).show()\r\n                        }\r\n                    }\r\n                    2 -> {\r\n                        val intent = Intent(Intent.ACTION_SEND)\r\n                        /*This will be the actual content you wish you share.*/\r\n                        /*This will be the actual content you wish you share.*/\r\n                        val shareBody = \"Use this \"\r\n                        /*The type of the content is text, obviously.*/\r\n                        /*The type of the content is text, obviously.*/intent.type = \"text/plain\"\r\n                        /*Applying information Subject and Body.*/\r\n                        /*Applying information Subject and Body.*/\r\n                        intent.putExtra(Intent.EXTRA_TEXT, shareBody)\r\n                        /*Fire!*/\r\n                        /*Fire!*/startActivity(\r\n                            Intent.createChooser(\r\n                                intent,\r\n                                \"Share via\"\r\n                            )\r\n                        )\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private fun getMenuObjects() = mutableListOf<MenuObject>().apply {\r\n        val close = MenuObject().apply {\r\n            setResourceValue(R.drawable.ic_baseline_close)\r\n            setBgColorValue(resources.getColor(R.color.colorPrimary))\r\n        }\r\n        val moreApps = MenuObject(\"More apps\").apply {\r\n            setResourceValue(R.drawable.ic_baseline_store)\r\n            setBgColorValue(resources.getColor(R.color.colorPrimary))\r\n        }\r\n        val rateUs = MenuObject(\"Rate Us\").apply {\r\n            setResourceValue(R.drawable.ic_baseline_star_rate)\r\n            setBgColorValue(resources.getColor(R.color.colorPrimary))\r\n        }\r\n        val feedback = MenuObject(\"Feedback\").apply {\r\n            setResourceValue(R.drawable.ic_baseline_feedback)\r\n            setBgColorValue(resources.getColor(R.color.colorPrimary))\r\n        }\r\n        val share = MenuObject(\"Share\").apply {\r\n            setResourceValue(R.drawable.ic_share)\r\n            setBgColorValue(resources.getColor(R.color.colorPrimary))\r\n        }\r\n\r\n        add(close)\r\n        add(moreApps)\r\n        add(rateUs)\r\n        add(feedback)\r\n        add(share)\r\n    }\r\n\r\n    private fun showContextMenuDialogFragment() {\r\n        Log.d(\"TAG\", \"showContextMenuDialogFragment: \")\r\n        if (supportFragmentManager.findFragmentByTag(ContextMenuDialogFragment.TAG) == null) {\r\n            contextMenuDialogFragment.show(supportFragmentManager, ContextMenuDialogFragment.TAG)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/MainActivity.kt	(revision 497fa6c3f7dc87793ee34d4ee4fb7f5ce4d84c35)
+++ app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/MainActivity.kt	(date 1622903036097)
@@ -97,13 +97,13 @@
 
         firebaseRemoteConfig = FirebaseRemoteConfig.getInstance()
 
-        Log.d("TAG", "onCreate: currentTime "+System.currentTimeMillis())
+        Log.d("TAG", "onCreate: currentTime " + System.currentTimeMillis())
 
-        if(!Pref.instance!!.dataChangedDate.equals(firebaseRemoteConfig!!.getString(Constants().DATA_CHANGED_DATE))){
+        if (!Pref.instance!!.dataChangedDate.equals(firebaseRemoteConfig!!.getString(Constants().DATA_CHANGED_DATE))) {
             Pref.instance!!.dataChanged = true
-            Pref.instance!!.dataChangedDate = firebaseRemoteConfig!!.getString(Constants().DATA_CHANGED_DATE)
-        }
-        else{
+            Pref.instance!!.dataChangedDate =
+                firebaseRemoteConfig!!.getString(Constants().DATA_CHANGED_DATE)
+        } else {
             Pref.instance!!.dataChanged = false
         }
 
@@ -156,11 +156,8 @@
                 R.id.id_home -> {
 
                     viewPager!!.currentItem = 0
-                    fancy(view, "Home")
-
                 }
                 R.id.id_category -> {
-
                     viewPager!!.currentItem = 1
                     fancy(view, "Category")
                 }
@@ -170,13 +167,11 @@
                     fancy(view, "Deals")
                 }
                 R.id.id_bookmark -> {
-
                     viewPager!!.currentItem = 3
                     fancy(view, "Deals")
                 }
             }
         }
-
         ivMenu.setOnClickListener {
             showContextMenuDialogFragment()
         }
@@ -348,7 +343,8 @@
             if (bool) {
                 val browserIntent = Intent(Intent.ACTION_VIEW, Uri.parse(item[2]))
                 startActivity(browserIntent)
-            } else {
+            }
+            else {
                 val intent: Intent = Intent(this, WebActivity::class.java)
                 intent.putExtra("title", item[1])
                 intent.putExtra("url", item[2])
@@ -357,7 +353,6 @@
                 if (searchTxt != null) {
                     intent.putExtra("search_url", item[5] + "$searchTxt")
                 }
-                startActivity(intent)
             }
         } else {
             val intent: Intent = Intent(this, WebActivity::class.java)
@@ -407,26 +402,49 @@
 
         contextMenuDialogFragment = ContextMenuDialogFragment.newInstance(menuParams).apply {
             menuItemClickListener = { view, position ->
-                when(position){
+                when (position) {
                     1 -> {
                         try {
-                            startActivity(Intent(Intent.ACTION_VIEW, Uri.parse("https://play.google.com/store/apps/dev?id=6823602592155636380")))
+                            startActivity(
+                                Intent(
+                                    Intent.ACTION_VIEW,
+                                    Uri.parse("https://play.google.com/store/apps/dev?id=6823602592155636380")
+                                )
+                            )
                         } catch (e: ActivityNotFoundException) {
-                            startActivity(Intent(Intent.ACTION_VIEW, Uri.parse("https://play.google.com/store/apps/details?id=6823602592155636380")))
+                            startActivity(
+                                Intent(
+                                    Intent.ACTION_VIEW,
+                                    Uri.parse("https://play.google.com/store/apps/details?id=6823602592155636380")
+                                )
+                            )
                         }
                     }
                     2 -> {
                         try {
-                            startActivity(Intent(Intent.ACTION_VIEW, Uri.parse("https://play.google.com/store/apps/details?id=shopping.grocery.medicine.online.deals.coupons.compare.buy")))
+                            startActivity(
+                                Intent(
+                                    Intent.ACTION_VIEW,
+                                    Uri.parse("https://play.google.com/store/apps/details?id=shopping.grocery.medicine.online.deals.coupons.compare.buy")
+                                )
+                            )
                         } catch (e: ActivityNotFoundException) {
-                            startActivity(Intent(Intent.ACTION_VIEW, Uri.parse("https://play.google.com/store/apps/details?id=shopping.grocery.medicine.online.deals.coupons.compare.buy")))
+                            startActivity(
+                                Intent(
+                                    Intent.ACTION_VIEW,
+                                    Uri.parse("https://play.google.com/store/apps/details?id=shopping.grocery.medicine.online.deals.coupons.compare.buy")
+                                )
+                            )
                         }
                     }
                     2 -> {
                         val i = Intent(Intent.ACTION_SEND)
                         i.type = "message/rfc822"
                         i.putExtra(Intent.EXTRA_EMAIL, arrayOf("infinitywebapps@gmail.com"))
-                        i.putExtra(Intent.EXTRA_SUBJECT, "Feedback "+resources.getString(R.string.app_name))
+                        i.putExtra(
+                            Intent.EXTRA_SUBJECT,
+                            "Feedback " + resources.getString(R.string.app_name)
+                        )
                         i.putExtra(Intent.EXTRA_TEXT, "Feedback :: ")
                         try {
                             startActivity(Intent.createChooser(i, "Send feedback..."))
Index: app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/WebActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package shopping.grocery.medicine.online.deals.coupons.compare.buy.view\r\n\r\nimport android.Manifest\r\nimport android.annotation.SuppressLint\r\nimport android.app.AlertDialog\r\nimport android.content.DialogInterface\r\nimport android.content.Intent\r\nimport android.content.SharedPreferences\r\nimport android.content.pm.PackageManager\r\nimport android.graphics.Bitmap\r\nimport android.graphics.Color\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.view.animation.AnimationUtils\r\nimport android.webkit.*\r\nimport android.widget.*\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport com.bumptech.glide.Glide\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy\r\nimport com.facebook.ads.*\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton\r\nimport com.google.firebase.analytics.FirebaseAnalytics\r\nimport com.google.firebase.remoteconfig.FirebaseRemoteConfig\r\nimport com.google.gson.Gson\r\nimport com.google.gson.reflect.TypeToken\r\nimport kotlinx.android.synthetic.main.activity_web.*\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.R\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.model.bookmark.Bookmarks\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Constants\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Helper\r\nimport kotlinx.android.synthetic.main.custom_toast.*\r\n\r\n\r\nclass WebActivity : AppCompatActivity() {\r\n\r\n    var webView: WebView? = null\r\n    var appTitle: String? = null\r\n    var appUrl: String? = null\r\n    var appIcon: String? = null\r\n    var color: String? = null\r\n    var searchUrl: String? = null\r\n\r\n    var rlWebSplash: RelativeLayout? = null\r\n    var ivAppIcon: ImageView? = null\r\n\r\n    private val TAG: String = WebActivity::class.java.simpleName\r\n    private val TIME_DELAY = 2000\r\n    private var back_pressed: Long = 0\r\n\r\n    private var interstitialFbAd: InterstitialAd? = null\r\n    private var adView: AdView? = null\r\n\r\n    var firebaseRemoteConfig: FirebaseRemoteConfig? = null\r\n    var firebaseAnalytics: FirebaseAnalytics? = null\r\n\r\n    var mGeoLocationRequestOrigin: String? = null\r\n    var mGeoLocationCallback: GeolocationPermissions.Callback? = null\r\n\r\n    private var sharedPreferences: SharedPreferences? = null\r\n    private var editor: SharedPreferences.Editor? = null\r\n    val STORE_FILE_NAME = \"Bookmarks_data\"\r\n\r\n    lateinit var btn1: FloatingActionButton\r\n    lateinit var share: FloatingActionButton\r\n    private lateinit var bkmark: FloatingActionButton\r\n    private lateinit var bkmarkText: TextView\r\n    private lateinit var shareText: TextView\r\n    private var clicked = false\r\n\r\n    var bookmarksList: ArrayList<Bookmarks>? = ArrayList()\r\n\r\n    private val LOCATION_PERMISSION_CODE = 1\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_web)\r\n\r\n\r\n        initViews()\r\n        initData()\r\n\r\n        firebaseRemoteConfig = FirebaseRemoteConfig.getInstance()\r\n        sharedPreferences =\r\n            getSharedPreferences(STORE_FILE_NAME, MODE_PRIVATE)\r\n        editor = sharedPreferences!!.edit()\r\n\r\n        bkmark.isEnabled = false\r\n\r\n        if (firebaseRemoteConfig!!.getBoolean(Constants().SHOW_ADS)) {\r\n\r\n            onFbBannerAds()\r\n            onLoadFbInterstitial()\r\n        }\r\n        loadWebSplash()\r\n\r\n        ActivityCompat.requestPermissions(\r\n            this,\r\n            arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), LOCATION_PERMISSION_CODE\r\n        )\r\n\r\n        webViewSettings()\r\n\r\n        if (searchUrl == null) {\r\n            webView?.loadUrl(appUrl!!)\r\n        } else {\r\n            webView?.loadUrl(searchUrl!!)\r\n        }\r\n\r\n        btn1.setOnClickListener {\r\n            onButtonClicked()\r\n        }\r\n\r\n\r\n\r\n        share.setOnClickListener {\r\n            val sendIntent: Intent = Intent().setAction(Intent.ACTION_SEND)\r\n            sendIntent.putExtra(\r\n                Intent.EXTRA_TEXT, appUrl\r\n            )\r\n            sendIntent.type = \"text/simple\"\r\n            val shareIntent = Intent.createChooser(sendIntent, null)\r\n            startActivity(shareIntent)\r\n        }\r\n\r\n        bkmark.setOnClickListener {\r\n\r\n            Log.d(TAG, \"onCreate: bookmarks \"+bkmark.tag)\r\n\r\n            if (bkmark.tag as Int === R.drawable.ic_bookmark) {\r\n                val bookmarks: Bookmarks? = Bookmarks()\r\n                bookmarks!!.bookmarkTitle = webView!!.title\r\n                bookmarks.bookmarkStoreTitle = appTitle\r\n                bookmarks.bookmarkUrl = webView!!.url\r\n                bookmarks.setBookmarkUrlWithoutAffiliate(getUrlWithoutParameters(webView!!.url!!))\r\n                bookmarks.bookmarkLogo = appIcon\r\n                bookmarks.webSplash = color\r\n\r\n                bookmarksList!!.add(bookmarks)\r\n\r\n                val bundle = Bundle()\r\n                bundle.putString(\"bookmarkTitle\", webView!!.title)\r\n                bundle.putString(\"bookmarkStoreTitle\", appTitle)\r\n                bundle.putString(\"bookmarkUrl\", webView!!.url)\r\n                firebaseAnalytics!!.logEvent(\"bookmarks_Usage\", bundle)\r\n\r\n                setBookmarks()\r\n\r\n                Helper().makeToast(\"Item added to your wishlist\",this@WebActivity)\r\n                bkmark.setImageDrawable(resources.getDrawable(R.drawable.ic_baseline_bookmark_fill))\r\n                bkmark.tag = R.drawable.ic_baseline_bookmark_fill\r\n            } else {\r\n                bkmark.setImageDrawable(resources.getDrawable(R.drawable.ic_bookmark))\r\n                bkmark.tag = R.drawable.ic_bookmark\r\n                removeBookmark(webView!!.url)\r\n            }\r\n        }\r\n    }\r\n\r\n    fun initViews() {\r\n        firebaseAnalytics = FirebaseAnalytics.getInstance(this@WebActivity)\r\n        webView = findViewById(R.id.webViewMain)\r\n        rlWebSplash = findViewById(R.id.rlWebSplash)\r\n        ivAppIcon = findViewById(R.id.ivAppIcon)\r\n        share = findViewById(R.id.button2)\r\n        bkmark = findViewById(R.id.button3)\r\n        btn1 = findViewById(R.id.button1)\r\n        shareText = findViewById(R.id.share)\r\n        bkmarkText = findViewById(R.id.bkmark)\r\n    }\r\n\r\n    fun initData() {\r\n\r\n        val bundle: Bundle? = intent.extras\r\n        appUrl = bundle?.getString(\"url\")\r\n        appIcon = bundle?.getString(\"app_icon\")\r\n        appTitle = bundle?.getString(\"title\")\r\n        color = bundle?.getString(\"color\")\r\n        searchUrl = bundle?.getString(\"search_url\")\r\n\r\n        Log.d(\"TAG\", \"initData: \" + bundle?.getString(\"url\"))\r\n        Log.d(\"colorweb\", \"initData: \" + bundle?.getString(\"color\"))\r\n        Log.d(\"search_url\", \"initData: \" + bundle?.getString(\"search_url\"))\r\n\r\n    }\r\n\r\n    private fun setBookmarks() {\r\n        Log.d(\"ShareBookmark\", bookmarksList.toString())\r\n        editor!!.putString(\"Bookmarks\", Gson().toJson(bookmarksList)).apply()\r\n    }\r\n\r\n    fun removeBookmark(bookmarkurl: String?) {\r\n        if (bookmarksList != null) {\r\n            var i = 0\r\n            while (i < bookmarksList!!.size) {\r\n                val bookmarkData: Bookmarks = bookmarksList!!.get(i)\r\n                if (bookmarkData.getBookmarkUrlWithoutAffiliate() != null && bookmarkData.getBookmarkUrlWithoutAffiliate()\r\n                        .equals(bookmarkurl)\r\n                ) {\r\n                    bookmarksList!!.removeAt(i)\r\n                    Helper().makeToast(\"Item removed from wishlist\",this@WebActivity)\r\n                }\r\n                i++\r\n            }\r\n            setBookmarks()\r\n        }\r\n    }\r\n\r\n    fun isBookmarked(webUrl: String?): Boolean {\r\n        getBookmarks()\r\n        if (bookmarksList != null) {\r\n            var i = 0\r\n            while (i < bookmarksList!!.size) {\r\n                val bookmarkData: Bookmarks = bookmarksList!![i]\r\n                Log.d(TAG, \"isBookmarked: \"+bookmarkData.getBookmarkUrlWithoutAffiliate())\r\n                if (bookmarkData.getBookmarkUrlWithoutAffiliate() != null && bookmarkData.getBookmarkUrlWithoutAffiliate()\r\n                        .equals(webUrl)\r\n                ) {\r\n                    return true\r\n                }\r\n                i++\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    private fun getUrlWithoutParameters(url: String): String? {\r\n        try {\r\n            return if (url.contains(\"?\")) {\r\n                url.substring(0, url.indexOf(\"?\"))\r\n            } else {\r\n                url\r\n            }\r\n        } catch (s: StringIndexOutOfBoundsException) {\r\n            Log.d(\"TAG\", \"getUrlWithoutParameters: \" + s.localizedMessage)\r\n        }\r\n        return null\r\n    }\r\n\r\n\r\n    private fun getBookmarks() {\r\n        if (bookmarksList != null && !bookmarksList!!.isEmpty()) {\r\n            bookmarksList!!.clear()\r\n        }\r\n        if(sharedPreferences!!.getString(\"Bookmarks\", null) != null){\r\n            val serializedObject: String = sharedPreferences!!.getString(\"Bookmarks\", null)!!\r\n            val gson = Gson()\r\n            val type = object : TypeToken<ArrayList<Bookmarks?>?>() {}.type\r\n            bookmarksList = gson.fromJson<ArrayList<Bookmarks>>(serializedObject, type)\r\n            Log.d(TAG, \"getBookmarks: \"+bookmarksList!!.size)\r\n        }\r\n    }\r\n\r\n\r\n    @SuppressLint(\"SetJavaScriptEnabled\")\r\n    fun webViewSettings() {\r\n        webView!!.settings.loadsImagesAutomatically = true\r\n        webView!!.settings.javaScriptEnabled = true\r\n        webView!!.settings.allowContentAccess = true\r\n        webView!!.settings.useWideViewPort = true\r\n        webView!!.settings.loadWithOverviewMode = true\r\n        webView!!.settings.domStorageEnabled = true\r\n        webView!!.clearView()\r\n        webView!!.isHorizontalScrollBarEnabled = false\r\n        webView!!.settings.setAppCacheEnabled(true)\r\n        webView!!.settings.databaseEnabled = true\r\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {\r\n            webView!!.settings.databasePath = \"/data/data/\" + this.packageName + \"/databases/\"\r\n        }\r\n        webView!!.isVerticalScrollBarEnabled = false\r\n        webView!!.settings.builtInZoomControls = true\r\n        webView!!.settings.displayZoomControls = false\r\n        webView!!.settings.allowFileAccess = true\r\n        webView!!.settings.pluginState = WebSettings.PluginState.OFF\r\n        webView!!.isScrollbarFadingEnabled = false\r\n        webView!!.settings.cacheMode = WebSettings.LOAD_NO_CACHE\r\n        webView!!.settings.defaultZoom = WebSettings.ZoomDensity.FAR\r\n        webView!!.webViewClient = WebViewClient()\r\n        webView!!.settings.setRenderPriority(WebSettings.RenderPriority.HIGH)\r\n        webView!!.setInitialScale(1)\r\n\r\n        webView!!.webViewClient = object : WebViewClient() {\r\n            override fun shouldOverrideUrlLoading(\r\n                view: WebView,\r\n                request: WebResourceRequest\r\n            ): Boolean {\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                    view.loadUrl(request.url.toString())\r\n                }\r\n                return false\r\n            }\r\n\r\n            override fun onPageStarted(view: WebView?, url: String?, favicon: Bitmap?) {\r\n                super.onPageStarted(view, url, favicon)\r\n                if (isBookmarked(getUrlWithoutParameters(view!!.getUrl()!!))) {\r\n                        bkmark.setImageDrawable(resources.getDrawable(R.drawable.ic_baseline_bookmark_fill))\r\n                        bkmark.tag = R.drawable.ic_baseline_bookmark_fill\r\n                    } else {\r\n                    bkmark.setImageDrawable(resources.getDrawable(R.drawable.ic_bookmark))\r\n                    bkmark.tag = R.drawable.ic_bookmark\r\n                }\r\n            }\r\n        }\r\n\r\n        webView!!.webChromeClient = object : WebChromeClient() {\r\n\r\n            override fun onGeolocationPermissionsShowPrompt(\r\n                origin: String?,\r\n                callback: GeolocationPermissions.Callback?\r\n            ) {\r\n                if (ContextCompat.checkSelfPermission(\r\n                        this@WebActivity,\r\n                        Manifest.permission.ACCESS_FINE_LOCATION\r\n                    )\r\n                    != PackageManager.PERMISSION_GRANTED\r\n                ) {\r\n\r\n                    if (ActivityCompat.shouldShowRequestPermissionRationale(\r\n                            this@WebActivity,\r\n                            Manifest.permission.ACCESS_FINE_LOCATION\r\n                        )\r\n                    ) {\r\n                        AlertDialog.Builder(this@WebActivity)\r\n                            .setMessage(\"Please turn ON the GPS to make app work smoothly\")\r\n                            .setNeutralButton(\r\n                                android.R.string.ok,\r\n                                DialogInterface.OnClickListener { dialogInterface, i ->\r\n                                    mGeoLocationCallback = callback\r\n                                    mGeoLocationRequestOrigin = origin\r\n                                    ActivityCompat.requestPermissions(\r\n                                        this@WebActivity,\r\n                                        arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),\r\n                                        1001\r\n                                    )\r\n\r\n                                })\r\n                            .show()\r\n\r\n                    } else {\r\n                        //no explanation need we can request the locatio\r\n                        mGeoLocationCallback = callback\r\n                        mGeoLocationRequestOrigin = origin\r\n                        ActivityCompat.requestPermissions(\r\n                            this@WebActivity,\r\n                            arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), 1001\r\n                        )\r\n                    }\r\n                } else {\r\n                    //tell the webview that permission has granted\r\n                    callback!!.invoke(origin, true, true)\r\n                }\r\n            }\r\n\r\n\r\n            override fun onProgressChanged(view: WebView?, newProgress: Int) {\r\n                super.onProgressChanged(view, newProgress)\r\n                if (newProgress >= 90) {\r\n                    rlWebSplash!!.visibility = View.GONE\r\n                    bkmark.setEnabled(true)\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    override fun onRequestPermissionsResult(\r\n        requestCode: Int,\r\n        permissions: Array<out String>,\r\n        grantResults: IntArray\r\n    ) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\r\n\r\n        when (requestCode) {\r\n            1001 -> {\r\n                //if permission is cancel result array would be empty\r\n                if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    //permission was granted\r\n                    if (mGeoLocationCallback != null) {\r\n                        mGeoLocationCallback!!.invoke(mGeoLocationRequestOrigin, true, true)\r\n                    }\r\n                } else {\r\n                    //permission denied\r\n                    if (mGeoLocationCallback != null) {\r\n                        mGeoLocationCallback!!.invoke(mGeoLocationRequestOrigin, false, false)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    fun loadWebSplash() {\r\n\r\n        if(color.isNullOrEmpty()){\r\n            rlWebSplash!!.setBackgroundColor(Color.parseColor(color))\r\n        }\r\n\r\n        Glide.with(ivAppIcon!!.context)\r\n            .load(appIcon)\r\n            .diskCacheStrategy(DiskCacheStrategy.ALL)\r\n            .into(ivAppIcon!!)\r\n    }\r\n\r\n    fun onLoadFbInterstitial() {\r\n        interstitialFbAd = InterstitialAd(this, Constants().getFbInterstitialWebExit())\r\n\r\n        val interstitialAdListener: InterstitialAdListener = object : InterstitialAdListener {\r\n            override fun onInterstitialDisplayed(ad: Ad) {\r\n                // Interstitial ad displayed callback\r\n                Log.e(TAG, \"Interstitial ad displayed.\")\r\n            }\r\n\r\n            override fun onInterstitialDismissed(ad: Ad) {\r\n                // Interstitial dismissed callback\r\n                Log.e(TAG, \"Interstitial ad dismissed.\")\r\n                finish()\r\n            }\r\n\r\n            override fun onError(ad: Ad?, adError: AdError) {\r\n                // Ad error callback\r\n                Log.e(TAG, \"Interstitial ad failed to load: \" + adError.getErrorMessage())\r\n            }\r\n\r\n            override fun onAdLoaded(ad: Ad) {\r\n                // Interstitial ad is loaded and ready to be displayed\r\n                Log.d(TAG, \"Interstitial ad is loaded and ready to be displayed!\")\r\n                // Show the ad\r\n//                interstitialFbAd.show()\r\n            }\r\n\r\n            override fun onAdClicked(ad: Ad) {\r\n                // Ad clicked callback\r\n                Log.d(TAG, \"Interstitial ad clicked!\")\r\n            }\r\n\r\n            override fun onLoggingImpression(ad: Ad) {\r\n                // Ad impression logged callback\r\n                Log.d(TAG, \"Interstitial ad impression logged!\")\r\n            }\r\n        }\r\n\r\n        interstitialFbAd!!.loadAd(\r\n            interstitialFbAd!!.buildLoadAdConfig()\r\n                .withAdListener(interstitialAdListener)\r\n                .build()\r\n        );\r\n\r\n    }\r\n\r\n    fun onFbBannerAds() {\r\n        adView = AdView(this, Constants().getFbBannerWeb(), AdSize.BANNER_HEIGHT_50)\r\n\r\n        // Find the Ad Container\r\n        val adContainer = findViewById<View>(R.id.banner_container) as LinearLayout\r\n\r\n        // Add the ad view to your activity layout\r\n        adContainer.addView(adView)\r\n\r\n        val adListenerBanner: com.facebook.ads.AdListener = object : com.facebook.ads.AdListener {\r\n            override fun onError(ad: Ad?, adError: AdError) {\r\n                // Ad error callback\r\n            }\r\n\r\n            override fun onAdLoaded(ad: Ad?) {\r\n                Log.d(TAG, \"onAdLoaded: Banner\")\r\n            }\r\n\r\n            override fun onAdClicked(ad: Ad?) {\r\n                // Ad clicked callback\r\n            }\r\n\r\n            override fun onLoggingImpression(ad: Ad?) {\r\n                // Ad impression logged callback\r\n            }\r\n        }\r\n\r\n        // Request an ad\r\n        adView!!.loadAd(adView!!.buildLoadAdConfig().withAdListener(adListenerBanner).build())\r\n    }\r\n\r\n    public override fun onPause() {\r\n//        adView.pause()\r\n        super.onPause()\r\n    }\r\n\r\n    // Called when returning to the activity\r\n    public override fun onResume() {\r\n        super.onResume()\r\n//        adView.resume()\r\n    }\r\n\r\n    // Called before the activity is destroyed\r\n    public override fun onDestroy() {\r\n        if (adView != null) {\r\n            adView!!.destroy()\r\n        }\r\n        super.onDestroy()\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n\r\n        if (back_pressed + TIME_DELAY > System.currentTimeMillis()) {\r\n            super.onBackPressed()\r\n        } else {\r\n            Toast.makeText(\r\n                getBaseContext(), \"Double click to exit!\",\r\n                Toast.LENGTH_SHORT\r\n            ).show();\r\n            if (webView!!.canGoBack()) {\r\n                webView!!.goBack()\r\n            } else {\r\n                if (interstitialFbAd != null && interstitialFbAd!!.isAdLoaded) {\r\n                    if (interstitialFbAd!!.isAdInvalidated) {\r\n                    } else {\r\n                        interstitialFbAd!!.show()\r\n                    }\r\n                } else {\r\n                    super.onBackPressed()\r\n                }\r\n\r\n            }\r\n        }\r\n        back_pressed = System.currentTimeMillis();\r\n\r\n    }\r\n\r\n    private fun onButtonClicked() {\r\n\r\n        if (!clicked) {\r\n            share.visibility = View.VISIBLE\r\n            bkmark.visibility = View.VISIBLE\r\n            shareText.visibility = View.VISIBLE\r\n            bkmarkText.visibility = View.VISIBLE\r\n        } else {\r\n            share.visibility = View.INVISIBLE\r\n            bkmark.visibility = View.INVISIBLE\r\n            shareText.visibility = View.INVISIBLE\r\n            bkmarkText.visibility = View.INVISIBLE\r\n        }\r\n\r\n        if (!clicked) {\r\n            share.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.from_bottom\r\n                )\r\n            )\r\n            bkmark.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.from_bottom\r\n                )\r\n            )\r\n            shareText.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.from_left\r\n                )\r\n            )\r\n            bkmarkText.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.from_left\r\n                )\r\n            )\r\n            btn1.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.rotate_open\r\n                )\r\n            )\r\n        } else {\r\n            share.startAnimation(AnimationUtils.loadAnimation(applicationContext, R.anim.to_bottom))\r\n            bkmark.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.to_bottom\r\n                )\r\n            )\r\n\r\n            shareText.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.to_left\r\n                )\r\n            )\r\n            bkmarkText.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.to_left\r\n                )\r\n            )\r\n            btn1.startAnimation(\r\n                AnimationUtils.loadAnimation(\r\n                    applicationContext,\r\n                    R.anim.rotate_close\r\n                )\r\n            )\r\n        }\r\n\r\n        if (!clicked) {\r\n            share.isClickable = true\r\n            bkmark.isClickable = true\r\n            shareText.isClickable = true\r\n            bkmarkText.isClickable = true\r\n        } else {\r\n            share.isClickable = false\r\n            bkmark.isClickable = false\r\n            shareText.isClickable = false\r\n            bkmarkText.isClickable = false\r\n        }\r\n        clicked = !clicked\r\n    }\r\n//\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/WebActivity.kt	(revision 497fa6c3f7dc87793ee34d4ee4fb7f5ce4d84c35)
+++ app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/WebActivity.kt	(date 1622903036214)
@@ -3,6 +3,7 @@
 import android.Manifest
 import android.annotation.SuppressLint
 import android.app.AlertDialog
+import android.content.Context
 import android.content.DialogInterface
 import android.content.Intent
 import android.content.SharedPreferences
@@ -11,6 +12,7 @@
 import android.graphics.Color
 import android.os.Build
 import android.os.Bundle
+import android.util.AttributeSet
 import android.util.Log
 import android.view.View
 import android.view.animation.AnimationUtils
@@ -28,11 +30,12 @@
 import com.google.gson.Gson
 import com.google.gson.reflect.TypeToken
 import kotlinx.android.synthetic.main.activity_web.*
+import kotlinx.android.synthetic.main.custom_toast.*
+import me.toptas.fancyshowcase.FancyShowCaseView
 import shopping.grocery.medicine.online.deals.coupons.compare.buy.R
 import shopping.grocery.medicine.online.deals.coupons.compare.buy.model.bookmark.Bookmarks
 import shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Constants
 import shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Helper
-import kotlinx.android.synthetic.main.custom_toast.*
 
 
 class WebActivity : AppCompatActivity() {
@@ -128,7 +131,7 @@
 
         bkmark.setOnClickListener {
 
-            Log.d(TAG, "onCreate: bookmarks "+bkmark.tag)
+            Log.d(TAG, "onCreate: bookmarks " + bkmark.tag)
 
             if (bkmark.tag as Int === R.drawable.ic_bookmark) {
                 val bookmarks: Bookmarks? = Bookmarks()
@@ -149,7 +152,7 @@
 
                 setBookmarks()
 
-                Helper().makeToast("Item added to your wishlist",this@WebActivity)
+                Helper().makeToast("Item added to your wishlist", this@WebActivity)
                 bkmark.setImageDrawable(resources.getDrawable(R.drawable.ic_baseline_bookmark_fill))
                 bkmark.tag = R.drawable.ic_baseline_bookmark_fill
             } else {
@@ -201,7 +204,7 @@
                         .equals(bookmarkurl)
                 ) {
                     bookmarksList!!.removeAt(i)
-                    Helper().makeToast("Item removed from wishlist",this@WebActivity)
+                    Helper().makeToast("Item removed from wishlist", this@WebActivity)
                 }
                 i++
             }
@@ -215,7 +218,7 @@
             var i = 0
             while (i < bookmarksList!!.size) {
                 val bookmarkData: Bookmarks = bookmarksList!![i]
-                Log.d(TAG, "isBookmarked: "+bookmarkData.getBookmarkUrlWithoutAffiliate())
+                Log.d(TAG, "isBookmarked: " + bookmarkData.getBookmarkUrlWithoutAffiliate())
                 if (bookmarkData.getBookmarkUrlWithoutAffiliate() != null && bookmarkData.getBookmarkUrlWithoutAffiliate()
                         .equals(webUrl)
                 ) {
@@ -245,12 +248,12 @@
         if (bookmarksList != null && !bookmarksList!!.isEmpty()) {
             bookmarksList!!.clear()
         }
-        if(sharedPreferences!!.getString("Bookmarks", null) != null){
+        if (sharedPreferences!!.getString("Bookmarks", null) != null) {
             val serializedObject: String = sharedPreferences!!.getString("Bookmarks", null)!!
             val gson = Gson()
             val type = object : TypeToken<ArrayList<Bookmarks?>?>() {}.type
             bookmarksList = gson.fromJson<ArrayList<Bookmarks>>(serializedObject, type)
-            Log.d(TAG, "getBookmarks: "+bookmarksList!!.size)
+            Log.d(TAG, "getBookmarks: " + bookmarksList!!.size)
         }
     }
 
@@ -296,9 +299,9 @@
             override fun onPageStarted(view: WebView?, url: String?, favicon: Bitmap?) {
                 super.onPageStarted(view, url, favicon)
                 if (isBookmarked(getUrlWithoutParameters(view!!.getUrl()!!))) {
-                        bkmark.setImageDrawable(resources.getDrawable(R.drawable.ic_baseline_bookmark_fill))
-                        bkmark.tag = R.drawable.ic_baseline_bookmark_fill
-                    } else {
+                    bkmark.setImageDrawable(resources.getDrawable(R.drawable.ic_baseline_bookmark_fill))
+                    bkmark.tag = R.drawable.ic_baseline_bookmark_fill
+                } else {
                     bkmark.setImageDrawable(resources.getDrawable(R.drawable.ic_bookmark))
                     bkmark.tag = R.drawable.ic_bookmark
                 }
@@ -394,7 +397,7 @@
 
     fun loadWebSplash() {
 
-        if(color.isNullOrEmpty()){
+        if (color.isNullOrEmpty()) {
             rlWebSplash!!.setBackgroundColor(Color.parseColor(color))
         }
 
Index: app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/fragment/BookmarkFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package shopping.grocery.medicine.online.deals.coupons.compare.buy.view.fragment\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.SharedPreferences\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.gson.Gson\r\nimport com.google.gson.reflect.TypeToken\r\nimport kotlinx.android.synthetic.main.fragment_bookmark.*\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.R\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.model.bookmark.Bookmarks\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Pref\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.RecyclerTouchListener\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.RecyclerTouchListener.OnRowClickListener\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.RecyclerTouchListener.OnSwipeOptionsClickListener\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.view.WebActivity\r\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.view.adapter.BookmarkAdapter\r\n\r\n\r\n// TODO: Rename parameter arguments, choose names that match\r\n// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\nprivate const val ARG_PARAM1 = \"param1\"\r\nprivate const val ARG_PARAM2 = \"param2\"\r\n\r\n/**\r\n * A simple [Fragment] subclass.\r\n * Use the [BookmarkFragment.newInstance] factory method to\r\n * create an instance of this fragment.\r\n */\r\nclass BookmarkFragment : Fragment() {\r\n    // TODO: Rename and change types of parameters\r\n    private var param1: Int? = null\r\n    private var param2: String? = null\r\n\r\n\r\n    lateinit var b_recycler: RecyclerView\r\n    lateinit var b_adapter: BookmarkAdapter\r\n    var bookmarkList: ArrayList<Bookmarks> = ArrayList()\r\n\r\n    private var sharedPreferences: SharedPreferences? = null\r\n    private var editor: SharedPreferences.Editor? = null\r\n\r\n    val STORE_FILE_NAME = \"Bookmarks_data\"\r\n\r\n    private var touchListener: RecyclerTouchListener? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        arguments?.let {\r\n            param1 = it.getInt(ARG_PARAM1)\r\n            param2 = it.getString(ARG_PARAM2)\r\n        }\r\n    }\r\n\r\n    override fun setUserVisibleHint(isVisibleToUser: Boolean) {\r\n        super.setUserVisibleHint(isVisibleToUser)\r\n        if(isVisibleToUser){\r\n            onRefreshFragment()\r\n        }\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_bookmark, container, false)\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        sharedPreferences =\r\n            requireActivity().getSharedPreferences(\r\n                STORE_FILE_NAME,\r\n                Context.MODE_PRIVATE\r\n            )\r\n        editor =\r\n            sharedPreferences!!.edit()\r\n\r\n        Pref.initializeInstance(this.context)\r\n        Log.d(\"Share\", Pref.instance!!.bookmarksData.toString())\r\n\r\n        b_recycler = view.findViewById(R.id.bookmark_rec)\r\n\r\n        b_adapter = BookmarkAdapter(this.requireContext(), bookmarkList)\r\n\r\n        b_recycler.layoutManager = LinearLayoutManager(this.context, RecyclerView.VERTICAL, false)\r\n        b_recycler.adapter = b_adapter\r\n\r\n\r\n        touchListener = RecyclerTouchListener(requireActivity(), b_recycler)\r\n        touchListener!!\r\n            .setClickable(object : OnRowClickListener {\r\n                override fun onRowClicked(position: Int) {\r\n                    val bookmarkData: Bookmarks? = bookmarkList[position]\r\n                    val bundle = Bundle()\r\n                    val intent: Intent = Intent(activity, WebActivity::class.java)\r\n                    intent.putExtra(\"title\", bookmarkData!!.bookmarkTitle)\r\n                    intent.putExtra(\"url\", bookmarkData.bookmarkUrl)\r\n                    intent.putExtra(\"app_icon\", bookmarkData.bookmarkLogo)\r\n                    intent.putExtra(\"color\", bookmarkData.webSplash)\r\n\r\n                    startActivity(intent)\r\n\r\n//                    Toast.makeText(\r\n//                        context,\r\n//                        bookmarkList[position].bookmarkTitle,\r\n//                        Toast.LENGTH_SHORT\r\n//                    ).show()\r\n                }\r\n\r\n                override fun onIndependentViewClicked(independentViewID: Int, position: Int) {}\r\n            })\r\n            .setSwipeOptionViews(R.id.delete_task, R.id.edit_task)\r\n            .setSwipeable(R.id.rowFG, R.id.rowBG, object : OnSwipeOptionsClickListener {\r\n                override fun onSwipeOptionClicked(viewID: Int, position: Int) {\r\n                    when (viewID) {\r\n                        R.id.delete_task -> {\r\n                            bookmarkList.removeAt(position)\r\n                            b_adapter.setList(bookmarkList)\r\n                        }\r\n                        R.id.edit_task -> Toast.makeText(\r\n                            context,\r\n                            \"Share\",\r\n                            Toast.LENGTH_SHORT\r\n                        ).show()\r\n                    }\r\n                }\r\n            })\r\n        b_recycler.addOnItemTouchListener(touchListener!!)\r\n\r\n        getBookmarks(view)\r\n\r\n    }\r\n\r\n    private fun getBookmarks(view: View) {\r\n        if (bookmarkList.isNotEmpty()) {\r\n            Log.d(\"TAG\", \"getBookmarks: list clear\")\r\n            bookmarkList.clear()\r\n        }\r\n        val serializedObject: String =\r\n            sharedPreferences!!.getString(\r\n                \"Bookmarks\",\r\n                null\r\n            )!!\r\n        if (serializedObject != null) {\r\n            val gson = Gson()\r\n            val type = object : TypeToken<ArrayList<Bookmarks?>?>() {}.type\r\n            bookmarkList = gson.fromJson(serializedObject, type)\r\n            if (bookmarkList != null) {\r\n                Log.d(\"TAG\", \"getBookmarks: \" + bookmarkList.size)\r\n            }\r\n            if (bookmarkList.isEmpty()) {\r\n                onSetEmptyLayout()\r\n            } else {\r\n                bookmark_rec.visibility = View.VISIBLE\r\n                emptyLayout.visibility = View.GONE\r\n                b_adapter.setList(bookmarkList)\r\n                b_adapter.notifyDataSetChanged()\r\n            }\r\n        } else {\r\n            onSetEmptyLayout()\r\n        }\r\n    }\r\n\r\n    private fun onSetEmptyLayout() {\r\n        bookmark_rec.visibility = View.GONE\r\n        emptyLayout.visibility = View.VISIBLE\r\n    }\r\n\r\n    private fun onRefreshFragment() {\r\n        Log.d(\"TAG\", \"onRefreshFragment: \")\r\n        getBookmarks(requireView())\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        b_recycler.addOnItemTouchListener(touchListener!!);\r\n    }\r\n\r\n\r\n    companion object {\r\n        /**\r\n         * Use this factory method to create a new instance of\r\n         * this fragment using the provided parameters.\r\n         *\r\n         * @param param1 Parameter 1.\r\n         * @param param2 Parameter 2.\r\n         * @return A new instance of fragment BookmarkFragment.\r\n         */\r\n        // TODO: Rename and change types and number of parameters\r\n        @JvmStatic\r\n        fun newInstance(param1: Int, param2: String) =\r\n            BookmarkFragment().apply {\r\n                arguments = Bundle().apply {\r\n                    putInt(ARG_PARAM1, param1)\r\n                    putString(ARG_PARAM2, param2)\r\n                }\r\n            }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/fragment/BookmarkFragment.kt	(revision 497fa6c3f7dc87793ee34d4ee4fb7f5ce4d84c35)
+++ app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/fragment/BookmarkFragment.kt	(date 1622903850970)
@@ -62,7 +62,7 @@
 
     override fun setUserVisibleHint(isVisibleToUser: Boolean) {
         super.setUserVisibleHint(isVisibleToUser)
-        if(isVisibleToUser){
+        if (isVisibleToUser) {
             onRefreshFragment()
         }
     }
@@ -83,8 +83,7 @@
                 STORE_FILE_NAME,
                 Context.MODE_PRIVATE
             )
-        editor =
-            sharedPreferences!!.edit()
+        editor = sharedPreferences!!.edit()
 
         Pref.initializeInstance(this.context)
         Log.d("Share", Pref.instance!!.bookmarksData.toString())
@@ -96,7 +95,6 @@
         b_recycler.layoutManager = LinearLayoutManager(this.context, RecyclerView.VERTICAL, false)
         b_recycler.adapter = b_adapter
 
-
         touchListener = RecyclerTouchListener(requireActivity(), b_recycler)
         touchListener!!
             .setClickable(object : OnRowClickListener {
@@ -150,8 +148,8 @@
         val serializedObject: String =
             sharedPreferences!!.getString(
                 "Bookmarks",
-                null
-            )!!
+                null)!!
+
         if (serializedObject != null) {
             val gson = Gson()
             val type = object : TypeToken<ArrayList<Bookmarks?>?>() {}.type
Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_05_21__3_06_PM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_29_05_21__3_06_PM__Default_Changelist_.xml	(revision 497fa6c3f7dc87793ee34d4ee4fb7f5ce4d84c35)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_29_05_21__3_06_PM__Default_Changelist_.xml	(revision 497fa6c3f7dc87793ee34d4ee4fb7f5ce4d84c35)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_29_05_21,_3_06_PM_[Default_Changelist]" date="1622281020561" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_05_21,_3_06_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 29/05/21, 3:06 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_29_05_21,_3_06_PM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_29_05_21,_3_06_PM_[Default_Changelist]/shelved.patch	(revision 497fa6c3f7dc87793ee34d4ee4fb7f5ce4d84c35)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_29_05_21,_3_06_PM_[Default_Changelist]/shelved.patch	(revision 497fa6c3f7dc87793ee34d4ee4fb7f5ce4d84c35)
@@ -1,272 +0,0 @@
-Index: app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/Singleton.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package shopping.grocery.medicine.online.deals.coupons.compare.buy\n\nimport android.app.Application\nimport android.content.Context\nimport android.util.Log\nimport com.facebook.ads.AdSettings\nimport com.facebook.ads.AudienceNetworkAds\nimport com.google.android.gms.ads.MobileAds\nimport com.google.android.gms.tasks.OnCompleteListener\nimport com.google.firebase.remoteconfig.BuildConfig\nimport com.google.firebase.remoteconfig.FirebaseRemoteConfig\nimport com.onesignal.OneSignal\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.data.DataFactory\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.data.DataService\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Constants\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.ForceUpdateChecker\nimport io.reactivex.Scheduler\nimport io.reactivex.plugins.RxJavaPlugins\nimport io.reactivex.schedulers.Schedulers\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.AppNotificationOpenHandler\nimport java.util.*\n\nclass Singleton : Application() {\n    private var dataService: DataService? = null\n    private var scheduler: Scheduler? = null\n    private val ONESIGNAL_APP_ID =\"df46e0a9-5880-4d88-ade5-f973c52a8a0e\"\n    companion object{\n\n        var application: Singleton? = null\n\n        fun get():Singleton? {\n            return application\n        }\n    }\n\n\n    override fun onCreate() {\n        super.onCreate()\n        application = this\n\n        RxJavaPlugins.setErrorHandler { throwable: Throwable ->\n            Log.e(\n                \"TAG\",\n                \"onCreate: \" + throwable.message\n            )\n        }\n        OneSignal.setLogLevel(OneSignal.LOG_LEVEL.VERBOSE, OneSignal.LOG_LEVEL.NONE)\n\n        // OneSignal Initialization\n        OneSignal.initWithContext(this)\n        OneSignal.setAppId(ONESIGNAL_APP_ID)\n        OneSignal.setNotificationOpenedHandler(AppNotificationOpenHandler(this))\n\n\n        AudienceNetworkAds.initialize(this);\n        if(BuildConfig.DEBUG){\n            AdSettings.setIntegrationErrorMode(AdSettings.IntegrationErrorMode.INTEGRATION_ERROR_CRASH_DEBUG_MODE);\n        }\n\n        MobileAds.initialize(this) { initializationStatus ->\n            val statusMap =\n                initializationStatus.adapterStatusMap\n            for (adapterClass in statusMap.keys) {\n                val status = statusMap[adapterClass]\n                Log.d(\"MyApp\", String.format(\n                    \"Adapter name: %s, Description: %s, Latency: %d\",\n                    adapterClass, status!!.description, status.latency))\n            }\n\n            // Start loading ads here...\n        }\n\n        if (BuildConfig.DEBUG){\n            AdSettings.setTestMode(true);\n        }else{\n            AdSettings.setTestMode(false);\n        }\n        val firebaseRemoteConfig: FirebaseRemoteConfig = FirebaseRemoteConfig.getInstance()\n\n        // set in-app defaults\n\n        // set in-app defaults\n\n        // set in-app defaults\n        val remoteConfigDefaults = TreeMap<String?, Any?>()\n        remoteConfigDefaults[Constants().SHOW_ADS] = false\n        remoteConfigDefaults[Constants().OPEN_BROWSER] = false\n        remoteConfigDefaults[ForceUpdateChecker().KEY_UPDATE_REQUIRED] = false\n        remoteConfigDefaults[ForceUpdateChecker().KEY_CURRENT_VERSION] = \"1.0\"\n        remoteConfigDefaults[ForceUpdateChecker().KEY_UPDATE_URL] =\n            \"https://play.google.com/store/apps/details?id=\"+applicationContext.packageName\n\n        firebaseRemoteConfig.setDefaultsAsync(remoteConfigDefaults)\n        firebaseRemoteConfig.fetch(300) // fetch every minutes\n            .addOnCompleteListener(OnCompleteListener<Void?> { task ->\n                if (task.isSuccessful) {\n                    Log.d(\"TAG\", \"remote config is fetched.$task\")\n                    firebaseRemoteConfig.fetchAndActivate()\n                    Log.d(\n                        \"TAG\",\n                        \"onComplete: \" + firebaseRemoteConfig.getString(\"banner_facebook_ads\")\n                    )\n                }\n            })\n\n\n    }\n\n\n    fun getDataService(): DataService? {\n        val dataService by lazy {\n            DataFactory.create()\n        }\n        return dataService\n    }\n\n    fun subscribeScheduler(): Scheduler? {\n        if (scheduler == null) {\n            scheduler = Schedulers.io()\n        }\n        return scheduler\n    }\n\n\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/Singleton.kt	(revision 68bd1c03aa67a8b08e9006638dc8659df837ad89)
-+++ app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/Singleton.kt	(date 1621615021309)
-@@ -5,7 +5,6 @@
- import android.util.Log
- import com.facebook.ads.AdSettings
- import com.facebook.ads.AudienceNetworkAds
--import com.google.android.gms.ads.MobileAds
- import com.google.android.gms.tasks.OnCompleteListener
- import com.google.firebase.remoteconfig.BuildConfig
- import com.google.firebase.remoteconfig.FirebaseRemoteConfig
-@@ -57,23 +56,10 @@
-             AdSettings.setIntegrationErrorMode(AdSettings.IntegrationErrorMode.INTEGRATION_ERROR_CRASH_DEBUG_MODE);
-         }
- 
--        MobileAds.initialize(this) { initializationStatus ->
--            val statusMap =
--                initializationStatus.adapterStatusMap
--            for (adapterClass in statusMap.keys) {
--                val status = statusMap[adapterClass]
--                Log.d("MyApp", String.format(
--                    "Adapter name: %s, Description: %s, Latency: %d",
--                    adapterClass, status!!.description, status.latency))
--            }
--
--            // Start loading ads here...
--        }
--
-         if (BuildConfig.DEBUG){
--            AdSettings.setTestMode(true);
-+            AdSettings.setTestMode(true)
-         }else{
--            AdSettings.setTestMode(false);
-+            AdSettings.setTestMode(false)
-         }
-         val firebaseRemoteConfig: FirebaseRemoteConfig = FirebaseRemoteConfig.getInstance()
- 
-Index: app/src/main/res/layout/fragment_category.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.core.widget.NestedScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".view.fragment.CategoryFragment\">\n\n    <!-- TODO: Update blank fragment layout -->\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\">\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"20dp\">\n\n            <LinearLayout\n                android:id=\"@+id/llSuperMarts\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_supermarts\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/super_mart\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n            <Space\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"0.5\"\n                android:layout_height=\"wrap_content\"/>\n\n            <LinearLayout\n                android:id=\"@+id/llGroceries\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_groceries\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/groceries\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"20dp\">\n\n            <LinearLayout\n                android:id=\"@+id/llMedicines\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_medicines\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/medicines\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n            <Space\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"0.5\"\n                android:layout_height=\"wrap_content\"/>\n\n            <LinearLayout\n                android:id=\"@+id/llSupplements\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_suppliments\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/supplements\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"20dp\">\n\n            <LinearLayout\n                android:id=\"@+id/llElectronics\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_electronics\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/electronics\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n            <Space\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"0.5\"\n                android:layout_height=\"wrap_content\"/>\n\n            <LinearLayout\n                android:id=\"@+id/llBeauty\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_beauty\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/beauty\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n\n        </LinearLayout>\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n\n            <com.facebook.ads.NativeAdLayout\n                android:id=\"@+id/native_ad_container_cat_1\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:layout_marginTop=\"12dp\"\n                android:layout_marginBottom=\"12dp\"\n                />\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n\n            <FrameLayout\n                android:id=\"@+id/ad_frame_cat_1\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"12dp\"\n                android:layout_marginBottom=\"12dp\"/>\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"20dp\">\n\n            <LinearLayout\n                android:id=\"@+id/llJewellery\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_jwellery\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/jewellery\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n            <Space\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"0.5\"\n                android:layout_height=\"wrap_content\"/>\n\n            <LinearLayout\n                android:id=\"@+id/llKitchenAppliances\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_kitchen_appliences\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/kitchen_appliances\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\" />\n\n            </LinearLayout>\n\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"20dp\">\n\n            <LinearLayout\n                android:id=\"@+id/llKidsLifestyle\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_kids\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/kids_lifestyle\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n            <Space\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"0.5\"\n                android:layout_height=\"wrap_content\"/>\n\n            <LinearLayout\n                android:id=\"@+id/llBabyToys\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_baby_toys\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/baby_toys\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"20dp\">\n\n            <LinearLayout\n                android:id=\"@+id/llLingerie\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_lingerie\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/lingerie\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n            <Space\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"0.5\"\n                android:layout_height=\"wrap_content\"/>\n\n            <LinearLayout\n                android:id=\"@+id/llMenInnerWear\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_men\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/men_inner_wear\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n\n        </LinearLayout>\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n\n            <com.facebook.ads.NativeAdLayout\n                android:id=\"@+id/native_ad_container_cat_2\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:layout_marginTop=\"12dp\"\n                android:layout_marginBottom=\"12dp\"\n                />\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"20dp\">\n\n            <LinearLayout\n                android:id=\"@+id/llBooks\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_books\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/books\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n            <Space\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"0.5\"\n                android:layout_height=\"wrap_content\"/>\n\n            <LinearLayout\n                android:id=\"@+id/llFootwear\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"2\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:gravity=\"center_horizontal\"\n                android:padding=\"20dp\"\n                android:background=\"@drawable/card_bg_primary\">\n\n                <ImageView\n                    android:layout_width=\"80dp\"\n                    android:layout_height=\"80dp\"\n                    android:src=\"@drawable/ic_footwear\"/>\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"@string/footwear\"\n                    android:textSize=\"12sp\"\n                    android:layout_marginTop=\"10dp\"/>\n\n            </LinearLayout>\n\n\n\n        </LinearLayout>\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n\n            <FrameLayout\n                android:id=\"@+id/ad_frame_cat_2\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"12dp\"\n                android:layout_marginBottom=\"12dp\"/>\n\n        </LinearLayout>\n\n\n    </LinearLayout>\n\n</androidx.core.widget.NestedScrollView>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_category.xml	(revision 68bd1c03aa67a8b08e9006638dc8659df837ad89)
-+++ app/src/main/res/layout/fragment_category.xml	(date 1620734219913)
-@@ -204,22 +204,7 @@
-                 android:layout_width="match_parent"
-                 android:layout_height="wrap_content"
-                 android:orientation="vertical"
--                android:layout_marginTop="12dp"
--                android:layout_marginBottom="12dp"
-                 />
--
--        </LinearLayout>
--
--        <LinearLayout
--            android:layout_width="match_parent"
--            android:layout_height="wrap_content">
--
--            <FrameLayout
--                android:id="@+id/ad_frame_cat_1"
--                android:layout_width="match_parent"
--                android:layout_height="wrap_content"
--                android:layout_marginTop="12dp"
--                android:layout_marginBottom="12dp"/>
- 
-         </LinearLayout>
- 
-Index: app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/WebActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package shopping.grocery.medicine.online.deals.coupons.compare.buy.view\n\nimport android.Manifest\nimport android.app.AlertDialog\nimport android.content.DialogInterface\nimport android.content.pm.PackageManager\nimport android.os.Build\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.View\nimport android.webkit.*\nimport android.widget.ImageView\nimport android.widget.LinearLayout\nimport android.widget.RelativeLayout\nimport android.widget.Toast\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.core.app.ActivityCompat\nimport androidx.core.content.ContextCompat\nimport com.bumptech.glide.Glide\nimport com.bumptech.glide.load.engine.DiskCacheStrategy\nimport com.facebook.ads.*\nimport com.google.android.gms.ads.AdListener\nimport com.google.android.gms.ads.AdRequest\nimport com.google.android.gms.ads.InterstitialAd\nimport com.google.firebase.remoteconfig.FirebaseRemoteConfig\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.R\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Constants\nimport kotlinx.android.synthetic.main.activity_web.*\n\n\nclass WebActivity : AppCompatActivity() {\n\n    var webView: WebView? = null\n    var appTitle: String? = null\n    var appUrl: String? = null\n    var appIcon: String? = null\n\n    var rlWebSplash: RelativeLayout? = null\n    var ivAppIcon: ImageView? = null\n\n    private val TAG: String = WebActivity::class.java.simpleName\n    private val TIME_DELAY = 2000\n    private var back_pressed: Long = 0\n\n    private var interstitialFbAd: com.facebook.ads.InterstitialAd? = null\n    private var adView: AdView? = null\n    lateinit var fullscreenView: View\n\n    var firebaseRemoteConfig: FirebaseRemoteConfig? = null\n\n    var mGeoLocationRequestOrigin: String? = null\n    var mGeoLocationCallback: GeolocationPermissions.Callback? = null\n\n    private val LOCATION_PERMISSION_CODE = 1\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_web)\n\n        initViews()\n        initData()\n\n        firebaseRemoteConfig = FirebaseRemoteConfig.getInstance()\n\n        if(firebaseRemoteConfig!!.getBoolean(Constants().SHOW_ADS)){\n\n            onFbBannerAds()\n            onLoadFbInterstitial()\n        }\n        loadWebSplash()\n\n        ActivityCompat.requestPermissions(\n            this,\n            arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), LOCATION_PERMISSION_CODE\n        )\n\n        webViewSettings()\n\n        webView?.loadUrl(appUrl)\n\n    }\n\n    fun initViews(){\n        webView = findViewById(R.id.webViewMain)\n        rlWebSplash = findViewById(R.id.rlWebSplash)\n        ivAppIcon = findViewById(R.id.ivAppIcon)\n    }\n\n    fun initData(){\n        val bundle: Bundle? = intent.extras\n        appUrl = bundle?.getString(\"url\")\n        appIcon = bundle?.getString(\"app_icon\")\n        Log.d(\"TAG\", \"initData: \" + bundle?.getString(\"url\"))\n\n    }\n\n    fun webViewSettings(){\n        webView!!.settings.loadsImagesAutomatically = true\n        webView!!.settings.javaScriptEnabled = true\n        webView!!.settings.allowContentAccess = true\n\n        webView!!.settings.useWideViewPort = true\n        webView!!.settings.loadWithOverviewMode = true\n        webView!!.settings.domStorageEnabled = true\n        webView!!.clearView()\n        webView!!.isHorizontalScrollBarEnabled = false\n        webView!!.settings.setAppCacheEnabled(true)\n        webView!!.settings.databaseEnabled = true\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {\n            webView!!.settings.databasePath = \"/data/data/\" + this.packageName + \"/databases/\"\n        }\n        webView!!.isVerticalScrollBarEnabled = false\n        webView!!.settings.builtInZoomControls = true\n        webView!!.settings.displayZoomControls = false\n        webView!!.settings.allowFileAccess = true\n        webView!!.settings.pluginState = WebSettings.PluginState.OFF\n        webView!!.isScrollbarFadingEnabled = false\n        webView!!.settings.cacheMode = WebSettings.LOAD_NO_CACHE\n        webView!!.settings.defaultZoom = WebSettings.ZoomDensity.FAR\n        webView!!.webViewClient = WebViewClient()\n        webView!!.settings.setRenderPriority(WebSettings.RenderPriority.HIGH)\n        webView!!.setInitialScale(1)\n\n        webView!!.webViewClient = object : WebViewClient() {\n            override fun shouldOverrideUrlLoading(\n                view: WebView,\n                request: WebResourceRequest\n            ): Boolean {\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n                    view.loadUrl(request.url.toString())\n                }\n                return false\n            }\n        }\n\n        webView!!.webChromeClient = object : WebChromeClient(){\n\n            override fun onGeolocationPermissionsShowPrompt(\n                origin: String?,\n                callback: GeolocationPermissions.Callback?\n            ) {\n                if (ContextCompat.checkSelfPermission(\n                        this@WebActivity,\n                        Manifest.permission.ACCESS_FINE_LOCATION\n                    )\n                    != PackageManager.PERMISSION_GRANTED\n                ) {\n\n                    if (ActivityCompat.shouldShowRequestPermissionRationale(\n                            this@WebActivity,\n                            Manifest.permission.ACCESS_FINE_LOCATION\n                        )\n                    ) {\n                        AlertDialog.Builder(this@WebActivity)\n                            .setMessage(\"Please turn ON the GPS to make app work smoothly\")\n                            .setNeutralButton(\n                                android.R.string.ok,\n                                DialogInterface.OnClickListener { dialogInterface, i ->\n                                    mGeoLocationCallback = callback\n                                    mGeoLocationRequestOrigin = origin\n                                    ActivityCompat.requestPermissions(\n                                        this@WebActivity,\n                                        arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),\n                                        1001\n                                    )\n\n                                })\n                            .show()\n\n                    } else {\n                        //no explanation need we can request the locatio\n                        mGeoLocationCallback = callback\n                        mGeoLocationRequestOrigin = origin\n                        ActivityCompat.requestPermissions(\n                            this@WebActivity,\n                            arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), 1001\n                        )\n                    }\n                } else {\n                    //tell the webview that permission has granted\n                    callback!!.invoke(origin, true, true)\n                }\n            }\n\n\n            override fun onProgressChanged(view: WebView?, newProgress: Int) {\n                super.onProgressChanged(view, newProgress)\n                if(newProgress >= 80){\n                    rlWebSplash!!.visibility = View.GONE\n                }\n            }\n\n        }\n    }\n\n    override fun onRequestPermissionsResult(\n        requestCode: Int,\n        permissions: Array<out String>,\n        grantResults: IntArray\n    ) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\n\n        when (requestCode) {\n            1001 -> {\n                //if permission is cancel result array would be empty\n                if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n                    //permission was granted\n                    if (mGeoLocationCallback != null) {\n                        mGeoLocationCallback!!.invoke(mGeoLocationRequestOrigin, true, true)\n                    }\n                } else {\n                    //permission denied\n                    if (mGeoLocationCallback != null) {\n                        mGeoLocationCallback!!.invoke(mGeoLocationRequestOrigin, false, false)\n                    }\n                }\n            }\n        }\n\n    }\n\n    fun loadWebSplash(){\n        Glide.with(ivAppIcon!!.context)\n            .load(appIcon)\n            .diskCacheStrategy(DiskCacheStrategy.ALL)\n            .into(ivAppIcon!!)\n    }\n\n    fun onLoadFbInterstitial() {\n        interstitialFbAd = InterstitialAd(this, Constants().getFbInterstitialWebExit())\n\n        val interstitialAdListener: InterstitialAdListener = object : InterstitialAdListener {\n            override fun onInterstitialDisplayed(ad: Ad) {\n                // Interstitial ad displayed callback\n                Log.e(TAG, \"Interstitial ad displayed.\")\n            }\n\n            override fun onInterstitialDismissed(ad: Ad) {\n                // Interstitial dismissed callback\n                Log.e(TAG, \"Interstitial ad dismissed.\")\n                finish()\n            }\n\n            override fun onError(ad: Ad?, adError: AdError) {\n                // Ad error callback\n                Log.e(TAG, \"Interstitial ad failed to load: \" + adError.getErrorMessage())\n            }\n\n            override fun onAdLoaded(ad: Ad) {\n                // Interstitial ad is loaded and ready to be displayed\n                Log.d(TAG, \"Interstitial ad is loaded and ready to be displayed!\")\n                // Show the ad\n//                interstitialFbAd.show()\n            }\n\n            override fun onAdClicked(ad: Ad) {\n                // Ad clicked callback\n                Log.d(TAG, \"Interstitial ad clicked!\")\n            }\n\n            override fun onLoggingImpression(ad: Ad) {\n                // Ad impression logged callback\n                Log.d(TAG, \"Interstitial ad impression logged!\")\n            }\n        }\n\n        interstitialFbAd!!.loadAd(\n            interstitialFbAd!!.buildLoadAdConfig()\n                .withAdListener(interstitialAdListener)\n                .build()\n        );\n\n    }\n\n    fun onFbBannerAds() {\n        adView = AdView(this, Constants().getFbBannerWeb(), AdSize.BANNER_HEIGHT_50)\n\n        // Find the Ad Container\n        val adContainer = findViewById<View>(R.id.banner_container) as LinearLayout\n\n        // Add the ad view to your activity layout\n        adContainer.addView(adView)\n\n        val adListenerBanner: com.facebook.ads.AdListener = object : com.facebook.ads.AdListener {\n            override fun onError(ad: Ad?, adError: AdError) {\n                // Ad error callback\n            }\n\n            override fun onAdLoaded(ad: Ad?) {\n                Log.d(TAG, \"onAdLoaded: Banner\")\n            }\n\n            override fun onAdClicked(ad: Ad?) {\n                // Ad clicked callback\n            }\n\n            override fun onLoggingImpression(ad: Ad?) {\n                // Ad impression logged callback\n            }\n        }\n\n        // Request an ad\n        adView!!.loadAd(adView!!.buildLoadAdConfig().withAdListener(adListenerBanner).build())\n    }\n\n    public override fun onPause() {\n//        adView.pause()\n        super.onPause()\n    }\n\n    // Called when returning to the activity\n    public override fun onResume() {\n        super.onResume()\n//        adView.resume()\n    }\n\n    // Called before the activity is destroyed\n    public override fun onDestroy() {\n        if(adView!=null){\n            adView!!.destroy()\n        }\n        super.onDestroy()\n    }\n\n    override fun onBackPressed() {\n\n        if (back_pressed + TIME_DELAY > System.currentTimeMillis()) {\n            super.onBackPressed()\n        } else {\n            Toast.makeText(getBaseContext(), \"Double click to exit!\",\n                Toast.LENGTH_SHORT).show();\n            if (webView!!.canGoBack()) {\n                webView!!.goBack()\n            }\n            else{\n                if (interstitialFbAd!=null && interstitialFbAd!!.isAdLoaded) {\n                    if (interstitialFbAd!!.isAdInvalidated) {\n                    } else {\n                        interstitialFbAd!!.show()\n                    }\n                }\n                else{\n                    super.onBackPressed()\n                }\n\n            }\n        }\n        back_pressed = System.currentTimeMillis();\n\n    }\n//\n\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/WebActivity.kt	(revision 68bd1c03aa67a8b08e9006638dc8659df837ad89)
-+++ app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/WebActivity.kt	(date 1621851018110)
-@@ -19,9 +19,6 @@
- import com.bumptech.glide.Glide
- import com.bumptech.glide.load.engine.DiskCacheStrategy
- import com.facebook.ads.*
--import com.google.android.gms.ads.AdListener
--import com.google.android.gms.ads.AdRequest
--import com.google.android.gms.ads.InterstitialAd
- import com.google.firebase.remoteconfig.FirebaseRemoteConfig
- import shopping.grocery.medicine.online.deals.coupons.compare.buy.R
- import shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Constants
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>apply plugin: 'com.android.application'\napply plugin: 'kotlin-android'\napply plugin: 'com.google.firebase.crashlytics'\napply plugin: 'kotlin-android-extensions'\napply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'\n\nandroid {\n    compileSdkVersion 29\n    buildToolsVersion \"29.0.3\"\n\n    defaultConfig {\n        applicationId \"shopping.grocery.medicine.online.deals.coupons.compare.buy\"\n        minSdkVersion 16\n        targetSdkVersion 29\n        versionCode 7\n        versionName \"1.0.6\"\n        multiDexEnabled true\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\n\n    implementation androidXdependencies.appCompat\n    implementation androidXdependencies.design\n    implementation androidXdependencies.recyclerView\n    implementation androidXdependencies.cardView\n    implementation retrofitDependencies.retrofit\n    implementation retrofitDependencies.gson\n    implementation retrofitDependencies.rxAdapterJava\n    implementation rxDependencies.rxAndroid\n    implementation rxDependencies.rxJava\n\n    implementation circleImageView\n    implementation glide\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\n    annotationProcessor glideCompiler\n\n    implementation 'com.google.firebase:firebase-analytics:18.0.2'\n    implementation 'com.google.firebase:firebase-crashlytics:17.3.1'\n    implementation 'com.google.firebase:firebase-config:20.0.3'\n    implementation 'com.facebook.android:audience-network-sdk:6.0.0'\n    implementation 'com.google.firebase:firebase-database:19.6.0'\n    implementation 'com.firebaseui:firebase-ui-database:3.2.2'\n\n    implementation 'com.google.android.gms:play-services-ads:19.7.0'\n    implementation 'com.google.ads.mediation:facebook:5.6.0.0'\n\n    implementation 'com.synnapps:carouselview:0.1.5'\n\n    implementation 'com.squareup.picasso:picasso:2.71828'\n\n    implementation \"androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version\"\n    implementation \"androidx.lifecycle:lifecycle-livedata:$lifecycle_version\"\n\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\n    implementation 'androidx.core:core-ktx:1.3.2'\n    implementation 'com.onesignal:OneSignal:4.1.0'\n    implementation 'androidx.appcompat:appcompat:1.2.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\n    testImplementation 'junit:junit:4.13.1'\n    \n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\n\n}\napply plugin: 'com.google.gms.google-services'\napply plugin: 'com.google.firebase.crashlytics'
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/build.gradle	(revision 68bd1c03aa67a8b08e9006638dc8659df837ad89)
-+++ app/build.gradle	(date 1621613949461)
-@@ -45,16 +45,13 @@
-     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
-     annotationProcessor glideCompiler
- 
--    implementation 'com.google.firebase:firebase-analytics:18.0.2'
--    implementation 'com.google.firebase:firebase-crashlytics:17.3.1'
--    implementation 'com.google.firebase:firebase-config:20.0.3'
--    implementation 'com.facebook.android:audience-network-sdk:6.0.0'
--    implementation 'com.google.firebase:firebase-database:19.6.0'
-+    implementation 'com.google.firebase:firebase-analytics:19.0.0'
-+    implementation 'com.google.firebase:firebase-crashlytics:18.0.0'
-+    implementation 'com.google.firebase:firebase-config:21.0.0'
-+    implementation 'com.facebook.android:audience-network-sdk:6.2.0'
-+    implementation 'com.google.firebase:firebase-database:20.0.0'
-     implementation 'com.firebaseui:firebase-ui-database:3.2.2'
- 
--    implementation 'com.google.android.gms:play-services-ads:19.7.0'
--    implementation 'com.google.ads.mediation:facebook:5.6.0.0'
--
-     implementation 'com.synnapps:carouselview:0.1.5'
- 
-     implementation 'com.squareup.picasso:picasso:2.71828'
-@@ -64,7 +61,7 @@
- 
-     implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
-     implementation 'androidx.core:core-ktx:1.3.2'
--    implementation 'com.onesignal:OneSignal:4.1.0'
-+    implementation 'com.onesignal:OneSignal:4.3.4'
-     implementation 'androidx.appcompat:appcompat:1.2.0'
-     implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
-     testImplementation 'junit:junit:4.13.1'
-Index: .idea/compiler.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CompilerConfiguration\">\n    <bytecodeTargetLevel target=\"1.8\" />\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/compiler.xml	(revision 68bd1c03aa67a8b08e9006638dc8659df837ad89)
-+++ .idea/compiler.xml	(date 1621612537237)
-@@ -1,6 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="CompilerConfiguration">
--    <bytecodeTargetLevel target="1.8" />
-+    <bytecodeTargetLevel target="11" />
-   </component>
- </project>
-\ No newline at end of file
-Index: app/src/main/res/layout/card_deals_portal_layout.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"140dp\"\n    android:layout_height=\"wrap_content\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    app:cardCornerRadius=\"10dp\"\n    app:cardElevation=\"2dp\"\n    android:layout_margin=\"10dp\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\"\n        android:background=\"@drawable/card_bg_primary\"\n        android:padding=\"5dp\">\n\n\n        <ImageView\n            android:id=\"@+id/ivStoreIcon\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"140dp\"/>\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:padding=\"10dp\">\n\n            <TextView\n                android:id=\"@+id/ivDeals\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"1\"\n                android:layout_height=\"30dp\"\n                android:textStyle=\"bold\"\n                android:text=\"Deals\"/>\n\n            <View\n                android:layout_width=\"1dp\"\n                android:layout_height=\"match_parent\"\n                android:background=\"@color/black_25\" />\n\n            <TextView\n                android:id=\"@+id/tvCoupons\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"1\"\n                android:layout_height=\"32dp\"\n                android:paddingLeft=\"3dp\"\n                android:text=\"Coupon\"\n                android:textStyle=\"bold\"/>\n\n\n        </LinearLayout>\n\n    </LinearLayout>\n\n</androidx.cardview.widget.CardView>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/card_deals_portal_layout.xml	(revision 68bd1c03aa67a8b08e9006638dc8659df837ad89)
-+++ app/src/main/res/layout/card_deals_portal_layout.xml	(date 1620734963817)
-@@ -23,7 +23,8 @@
-         <LinearLayout
-             android:layout_width="match_parent"
-             android:layout_height="wrap_content"
--            android:padding="10dp">
-+            android:padding="10dp"
-+            android:gravity="center">
- 
-             <TextView
-                 android:id="@+id/ivDeals"
-@@ -31,12 +32,14 @@
-                 android:layout_weight="1"
-                 android:layout_height="30dp"
-                 android:textStyle="bold"
--                android:text="Deals"/>
-+                android:text="Deals"
-+                android:gravity="center"/>
- 
-             <View
-                 android:layout_width="1dp"
-                 android:layout_height="match_parent"
--                android:background="@color/black_25" />
-+                android:background="@color/black_25"
-+                android:layout_gravity="center"/>
- 
-             <TextView
-                 android:id="@+id/tvCoupons"
-@@ -45,7 +48,8 @@
-                 android:layout_height="32dp"
-                 android:paddingLeft="3dp"
-                 android:text="Coupon"
--                android:textStyle="bold"/>
-+                android:textStyle="bold"
-+                android:gravity="center"/>
- 
- 
-         </LinearLayout>
-Index: .idea/runConfigurations.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"RunConfigurationProducerService\">\n    <option name=\"ignoredProducers\">\n      <set>\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\n      </set>\n    </option>\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/runConfigurations.xml	(revision 68bd1c03aa67a8b08e9006638dc8659df837ad89)
-+++ .idea/runConfigurations.xml	(date 1621612451544)
-@@ -3,6 +3,7 @@
-   <component name="RunConfigurationProducerService">
-     <option name="ignoredProducers">
-       <set>
-+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
-         <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
-         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
-         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/misc.xml	(revision 68bd1c03aa67a8b08e9006638dc8659df837ad89)
-+++ .idea/misc.xml	(date 1621612537055)
-@@ -1,6 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
--  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
-+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
-     <output url="file://$PROJECT_DIR$/build/classes" />
-   </component>
-   <component name="ProjectType">
-Index: app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/fragment/DealFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package shopping.grocery.medicine.online.deals.coupons.compare.buy.view.fragment\n\nimport android.content.ContentValues.TAG\nimport android.content.Intent\nimport android.graphics.Rect\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Button\nimport androidx.fragment.app.Fragment\nimport androidx.lifecycle.Observer\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.recyclerview.widget.GridLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport androidx.recyclerview.widget.RecyclerView.ItemDecoration\nimport com.facebook.ads.*\nimport com.google.firebase.analytics.FirebaseAnalytics\nimport com.google.firebase.remoteconfig.FirebaseRemoteConfig\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.R\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.utils.Constants\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.view.MainActivity\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.view.WebActivity\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.view.adapter.DealsAdapter\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.view.listener.deals.CouponInfoClickListener\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.view.listener.deals.DealClickListener\nimport shopping.grocery.medicine.online.deals.coupons.compare.buy.viewmodel.DealsViewModel\n\n// TODO: Rename parameter arguments, choose names that match\n// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\nprivate const val ARG_PARAM1 = \"param1\"\nprivate const val ARG_PARAM2 = \"param2\"\n\n/**\n * A simple [Fragment] subclass.\n * Use the [DealFragment.newInstance] factory method to\n * create an instance of this fragment.\n */\nclass DealFragment : Fragment(), CouponInfoClickListener, DealClickListener {\n    // TODO: Rename and change types of parameters\n    private var param1: Int? = null\n    private var param2: String? = null\n\n    var rvInvest: RecyclerView? = null\n    var dealsAdapter: DealsAdapter? = null\n    var dealsViewModel: DealsViewModel? = null\n    var investDataList: ArrayList<List<String>>? = ArrayList()\n    var firebaseAnalytics: FirebaseAnalytics? = null\n\n    var firebaseRemoteConfig: FirebaseRemoteConfig? = null\n    var btShowDeals: Button? = null\n    private var interstitialFbAd: com.facebook.ads.InterstitialAd? = null\n    private var adView: AdView? = null\n    var layoutShowVideo: View? = null\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        arguments?.let {\n            param1 = it.getInt(ARG_PARAM1)\n            param2 = it.getString(ARG_PARAM2)\n        }\n    }\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        // Inflate the layout for this fragment\n        return inflater.inflate(R.layout.fragment_invest, container, false)\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n\n        initViews(view)\n\n        setRecyclerView()\n\n        dealsViewModel = ViewModelProvider(activity!!).get(DealsViewModel::class.java)\n        firebaseRemoteConfig = FirebaseRemoteConfig.getInstance()\n        dealsViewModel?.loadData()\n        if (firebaseRemoteConfig!!.getBoolean(Constants().SHOW_ADS)) {\n            onLoadFbInterstitial()\n        }\n        dealsViewModel!!.dealsLiveData.observe(this, Observer { t ->\n            Log.d(\"TAG\", \"onViewCreated: Deals ${t?.size}\")\n            investDataList?.addAll(t!!)\n            dealsAdapter?.notifyDataSetChanged()\n        })\n\n        btShowDeals!!.setOnClickListener {\n            if(interstitialFbAd!!.isAdLoaded){\n                interstitialFbAd!!.show()\n            }\n            else{\n                onDisplayDeals()\n            }\n        }\n\n\n    }\n\n    fun initViews(view: View){\n        firebaseAnalytics = FirebaseAnalytics.getInstance(activity!!)\n        rvInvest = view.findViewById(R.id.rvInvest)\n        layoutShowVideo = view.findViewById(R.id.layoutShowVideo)\n        btShowDeals = layoutShowVideo!!.findViewById(R.id.btShowDeals)\n    }\n\n    fun setRecyclerView(){\n        dealsAdapter = DealsAdapter(context, investDataList!!, this, this)\n        rvInvest.apply {\n            rvInvest?.layoutManager = GridLayoutManager(context, 2)\n            rvInvest!!.addItemDecoration(SpacesItemDecoration(20))\n            rvInvest?.adapter = dealsAdapter\n        }\n    }\n\n    private class SpacesItemDecoration(private val space: Int) : ItemDecoration() {\n        override fun getItemOffsets(\n            outRect: Rect, view: View,\n            parent: RecyclerView, state: RecyclerView.State\n        ) {\n            outRect.top = space\n            outRect.bottom = space\n\n            // Add top margin only for the first item to avoid double space between items\n            if (parent.getChildLayoutPosition(view) % 2 == 0) {\n                outRect.left = space\n                outRect.right = space\n            } else {\n                outRect.left = space\n                outRect.right = 0\n            }\n        }\n    }\n    fun onLoadFbInterstitial() {\n        interstitialFbAd = InterstitialAd(context, Constants().getFbInterstitialWebExit())\n\n        val interstitialAdListener: InterstitialAdListener = object : InterstitialAdListener {\n            override fun onInterstitialDisplayed(ad: Ad) {\n                // Interstitial ad displayed callback\n                Log.e(TAG, \"Interstitial ad displayed.\")\n            }\n\n            override fun onInterstitialDismissed(ad: Ad) {\n                // Interstitial dismissed callback\n                Log.e(TAG, \"Interstitial ad dismissed.\")\n\n            }\n\n            override fun onError(ad: Ad?, adError: AdError) {\n                // Ad error callback\n                Log.e(TAG, \"Interstitial ad failed to load: \" + adError.getErrorMessage())\n            }\n\n            override fun onAdLoaded(ad: Ad) {\n                // Interstitial ad is loaded and ready to be displayed\n                Log.d(TAG, \"Interstitial ad is loaded and ready to be displayed!\")\n                // Show the ad\n//                interstitialFbAd.show()\n            }\n\n            override fun onAdClicked(ad: Ad) {\n                // Ad clicked callback\n                Log.d(TAG, \"Interstitial ad clicked!\")\n            }\n\n            override fun onLoggingImpression(ad: Ad) {\n                // Ad impression logged callback\n                Log.d(TAG, \"Interstitial ad impression logged!\")\n            }\n        }\n\n        interstitialFbAd!!.loadAd(\n            interstitialFbAd!!.buildLoadAdConfig()\n                .withAdListener(interstitialAdListener)\n                .build()\n        );\n\n    }\n\n    fun onDisplayDeals(){\n        if(layoutShowVideo!!.visibility == View.VISIBLE){\n            layoutShowVideo!!.visibility = View.GONE\n        }\n        if(rvInvest!!.visibility == View.GONE){\n            rvInvest!!.visibility = View.VISIBLE\n        }\n    }\n\n\n    override fun onDestroy() {\n        dealsViewModel?.reset()\n        super.onDestroy()\n    }\n\n    companion object {\n        /**\n         * Use this factory method to create a new instance of\n         * this fragment using the provided parameters.\n         *\n         * @param param1 Parameter 1.\n         * @param param2 Parameter 2.\n         * @return A new instance of fragment InvestFragment.\n         */\n        // TODO: Rename and change types and number of parameters\n        @JvmStatic\n        fun newInstance(param1: Int, param2: String) =\n            DealFragment().apply {\n                arguments = Bundle().apply {\n                    putInt(ARG_PARAM1, param1)\n                    putString(ARG_PARAM2, param2)\n                }\n            }\n    }\n\n    override fun onClickDeal(item: List<String>) {\n\n        val bundle = Bundle()\n        bundle.putString(\"title\", item.get(1))\n        bundle.putString(\"url\", item.get(3))\n        (activity as MainActivity?)!!.onUpdateLogEvent(bundle, \"deals_visited\", true)\n\n        val intent: Intent? = Intent(activity, WebActivity::class.java)\n        intent?.putExtra(\"title\", item.get(1))\n        intent?.putExtra(\"url\", item.get(3))\n        intent?.putExtra(\"app_icon\", item.get(2))\n        startActivity(intent)\n    }\n\n    override fun onClickCoupon(item: List<String>) {\n\n        val bundle = Bundle()\n        bundle.putString(\"title\", item.get(1))\n        bundle.putString(\"url\", item.get(4))\n        (activity as MainActivity?)!!.onUpdateLogEvent(bundle, \"coupons_visited\", true)\n\n        val intent: Intent? = Intent(activity, WebActivity::class.java)\n        intent?.putExtra(\"title\", item.get(1))\n        intent?.putExtra(\"url\", item.get(4))\n        intent?.putExtra(\"app_icon\", item.get(2))\n        startActivity(intent)\n    }\n\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/fragment/DealFragment.kt	(revision 68bd1c03aa67a8b08e9006638dc8659df837ad89)
-+++ app/src/main/java/shopping/grocery/medicine/online/deals/coupons/compare/buy/view/fragment/DealFragment.kt	(date 1620734772418)
-@@ -50,7 +50,7 @@
- 
-     var firebaseRemoteConfig: FirebaseRemoteConfig? = null
-     var btShowDeals: Button? = null
--    private var interstitialFbAd: com.facebook.ads.InterstitialAd? = null
-+    private var interstitialFbAd: InterstitialAd? = null
-     private var adView: AdView? = null
-     var layoutShowVideo: View? = null
-     override fun onCreate(savedInstanceState: Bundle?) {
-@@ -89,8 +89,10 @@
-         })
- 
-         btShowDeals!!.setOnClickListener {
--            if(interstitialFbAd!!.isAdLoaded){
--                interstitialFbAd!!.show()
-+            if(interstitialFbAd!=null){
-+                if(interstitialFbAd!!.isAdLoaded){
-+                    interstitialFbAd!!.show()
-+                }
-             }
-             else{
-                 onDisplayDeals()
-@@ -111,7 +113,7 @@
-         dealsAdapter = DealsAdapter(context, investDataList!!, this, this)
-         rvInvest.apply {
-             rvInvest?.layoutManager = GridLayoutManager(context, 2)
--            rvInvest!!.addItemDecoration(SpacesItemDecoration(20))
-+            rvInvest!!.addItemDecoration(SpacesItemDecoration(50))
-             rvInvest?.adapter = dealsAdapter
-         }
-     }
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_03_06_21__10_15_AM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_03_06_21__10_15_AM__Default_Changelist_.xml
